the homework for october 28th is done.
now I just have to figure out project 14

...

<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->
<link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css">
<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->

...

1. Project

Communicating on the Web

For this project, you will be adding something we’ve studied this week to your personal web page. This makes the code yours, 
and can be an example of your knowledge. There doesn’t necessarily have to be a purpose for what you choose to add; in some 
ways you simply want to show off your skills to a potential employer. Choose from:

Leaflet

Asynchronous Functions [asynchronous functions]

Collect form information in json format

Google Maps

Whatever you choose, be sure to have clear comments in your code so a reviewer can understand what you did, and also so you can 
go back a month or more later and be reminded of what your thought process was.
When finished, submit your code!

Submission steps:

Before you click on "Mark as Completed":

You need to do one of the following: either upload all of your files to Codio or deploy a GitHub Page for this project.
Also, if you mark this project as complete but any of the boxes are blank, your TA will be unable to grade your project.

Codio upload:

Make sure all of your project code has been uploaded to Codio.
If you did not write your code in Codio, you will need to import all of the required files into your workspace file tree.
You can do this by going to File => Upload Files, and either manually importing each file, or dragging and dropping your project folder.
Please refer to this video if you are unsure of what to do.

GitHub Pages:

If you would rather upload your project to GitHub, please make sure to have the project deployed as a GitHub page 
so we can thoroughly test it. If you are unsure of how to do this, please follow these instructions.
It is important to understand you will need to make a separate repository for every project. You cannot deploy multiple 
pages from the same repository, even with different branches.
Also, no matter whether you uploaded your files from your computer or not, make sure to thoroughly test your code! This 
only takes a few minutes, but will prevent the amount of resubmissions because you missed something.

...

[Asynchronous functions] [Module Dealing with Asynchronous Functions]

https://www.youtube.com/watch?v=o2uivI8FdTc

[https://docs.google.com/document/d/1nC59RMOhZAWZO1_fdGAaeykVETOt3ODm5G2u9lPBda0/edit#heading=h.ik10jyq3fy44]

2

Communicating on the Web: HTTP/HTTPS, APIs, Async 1 - Thursday, October 26

In the first lesson you will understand what Synchronous means, understand what Asynchronous means, 
and build Asynchronous functions with JavaScript. In the second lesson you will understand Javascript 
Promises, learn how use Javascript Promises, and know the benefits of Javascript Promises. In the third 
lesson you will understand how an API works, know its different architectures, and create your own API.

...

I'm going to rule out working on a Leafelet or a Google Maps project for Project 14

[Collect form information in json format]

This seems like the best option because we've come across these before, so, I might be more 
familar with them, the other stuff is newer. In fact, I think that I was going to use a json file 
for project 12, but I think I put that off.

[https://docs.google.com/document/d/1nC59RMOhZAWZO1_fdGAaeykVETOt3ODm5G2u9lPBda0/edit#heading=h.ik10jyq3fy44]

...


Daryl - TA
8:58 AM

Hello @channel, please find Project Time schedules for this week below:
:alphabet-yellow-hash: What is Project Time?
It is a live zoom session where you work on your weekly project individually and a TA is available to answer any questions you might have regarding the project. If plan to work on the project later this week but have questions, you can always drop by and ask those questions.
You are able to attend either or both project sessions. If you can't make project times but need help, check office hour availability bookmarked at the top of this channel! Or feel free to check if other TAs are available as well: Software Web Development 4 TA Availability

:date: Wednesday, November 1st, 8:00pm - 9:00pm ET / 5:00pm - 6:00pm PT
:round_pushpin:Zoom
:microphone: Hosted by 
@Daryl - TA

:date: Thursday, November 2nd, 7:00 - 9:00pm ET / 4:00pm - 6:00pm PT
:round_pushpin:Zoom
:microphone: Hosted by 
@Jheremy - TA

:point_right: p.s: Please review all the materials from the prior modules before starting your projects.

...

Week 15 (10/24-10/28)
Module 14: Communicating on the Web: HTTP/HTTPS, APIs, Async


1

Professional Development #4 - Tuesday, October 24



2

Communicating on the Web: HTTP/HTTPS, APIs, Async 1 - Thursday, October 26

In the first lesson you will understand what Synchronous means, understand what Asynchronous means, and build Asynchronous functions with JavaScript. In the second lesson you will understand Javascript Promises, learn how use Javascript Promises, and know the benefits of Javascript Promises. In the third lesson you will understand how an API works, know its different architectures, and create your own API.

Session Recording - Module 14 Day 1 - Thurs., October 26
Module 14 Lesson 1.1
Module 14 Lesson 1.2
Module 14 Lesson 1.3

3

Communicating on the Web: HTTP/HTTPS, APIs, Async 2 & 3 - Saturday, October 28

Part 2: In the first lesson you will understand the usefulness of JSON files, know the structure of a JSON file and be able to build a JSON file. In the second lesson you will know how to work with the fetch method, be able to get data using the fetch method and execute a public free API. In the third lesson you will learn how to work with Leaflet, implement a solution with maps using Leaflet and practice knowledge in JavaScript. Part 3: In the first lesson you will learn how to set up Google Cloud ,create a project in Google Cloud, learn how to use Google Maps API and how to enable APIs in Google Cloud. In the second lesson you will learn how to use Google API keys in your deploy, how to restrict an API key and develop some simple examples using Google Maps APIs. In the third lesson you will practice all of the concepts and topics learned in this week, explore Google documentation and learn new things and finally improve your skills in JavaScript and in working with APIs.

Session Recording - Module 14 Day 2 - Sat., October 28
Module 14 Lesson 2.1
Module 14 Lesson 2.2
Module 14 Lesson 2.3
Module 14 Lesson 3.1
Module 14 Lesson 3.2
Module 14 Lesson 3.3
Project 14

...

[Project 14 Notes]

I'm leaning toward doing a json. to doing the json option, but I want to see if there is anything
that I could do with Asynchronous Functions.

...

Spanish
English
diversion
fun
Community Verified icon Verified

Translations of diversión
noun
fun
diversión, alegría, broma, chirigota
diversion
desviación, diversión, distracción, trasvase, entretenimiento, descanso
amusement
diversión, esparcimiento, entretenimiento, regocijo, distracción, atracción
entertainment
entretenimiento, diversión, espectáculo, agasajo
play
juego, obra, jugada, diversión, teatro, holgura
relaxation
relajación, descanso, relajamiento, aflojamiento, diversión, recreo
avocation
pasatiempo, distracción, afición, ocupación, diversión

...

I'm only familiar with pasatiempo as the word I'm looking for.

...

[https://www.youtube.com/watch?v=NYatLKK31-g]

...

where was I?

...

Goals
By the end of this lesson you will:
Understand what Synchronous means
Understand what Asynchronous means
Build Asynchronous functions with JavaScript
Introduction
This lesson explains the difference between Synchronous and Asynchronous JavaScript and how to build these functions in JavaScript. The topics covered will help you understand how JavaScript works by way of Synchronous or Asynchronous loading.
JavaScript is a single-threaded synchronous language, which means that the code is executed in order, one piece at a time. However, in some situations, JavaScript may appear to be asynchronous. This is made possible through the use of functions that allow the code to be executed out of order, at a different time than when it was dispatched. This change in the order of execution is known as asynchronous execution.

...

1. Synchronous & Asynchronous JavaScript
synchronous asynchronous
Goals
By the end of this lesson you will:
Understand what Synchronous means
Understand what Asynchronous means
Build Asynchronous functions with JavaScript
Introduction
This lesson explains the difference between Synchronous and Asynchronous JavaScript and how to build these functions in JavaScript. The topics covered will help you understand how JavaScript works by way of Synchronous or Asynchronous loading.
JavaScript is a single-threaded synchronous language, which means that the code is executed in order, one piece at a time. However, in some situations, JavaScript may appear to be asynchronous. This is made possible through the use of functions that allow the code to be executed out of order, at a different time than when it was dispatched. This change in the order of execution is known as asynchronous execution.
Next

...

1. Synchronous & Asynchronous JavaScript
synchronous asynchronous
Goals
By the end of this lesson you will:
Understand what Synchronous means
Understand what Asynchronous means
Build Asynchronous functions with JavaScript
Introduction
This lesson explains the difference between Synchronous and Asynchronous JavaScript and how to build these functions in JavaScript. The topics covered will help you understand how JavaScript works by way of Synchronous or Asynchronous loading.
JavaScript is a single-threaded synchronous language, which means that the code is executed in order, one piece at a time. However, in some situations, JavaScript may appear to be asynchronous. This is made possible through the use of functions that allow the code to be executed out of order, at a different time than when it was dispatched. This change in the order of execution is known as asynchronous execution.
Next

...

2. What is Synchronous Execution?
Synchronous execution in JavaScript refers to events that occur sequentially, one after another. It’s like doing things in a straight line, with one thing happening at a time. This means that the code is executed in a single-threaded manner.
synchronous asynchronous image
The figure above shows an example of synchronous execution, where Process A dispatches (calls) Process B. During this time, Process A pauses and waits until Process B runs to completion. Once Process B is complete, it returns to Process A, and Process A resumes its execution. This is because JavaScript is single-threaded / synchronous, which means that only one process can run at a time.
In this example, you will see how synchronous JavaScript works in practice:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="utf-8" />
   <title>Synchronous</title>
</head>
<body>
   <div id="message"></div>
   <script>
       var msg = document.getElementById("message");
 
       function fun1() {
           msg.innerHTML += "<p>fun1 started :)</p>";
           fun2();
           msg.innerHTML += "<p>fun1 ended :)</p>";
       }
       function fun2() {
           msg.innerHTML += "<p>fun2 started :)</p>";
           msg.innerHTML += "<p>fun2 ended :)</p>";
       }
       fun1();
   </script>
</body>
</html>
Output
fun1 started :)
fun2 started :)
fun2 ended :)
fun1 ended :)
When dealing with a large amount of code, synchronous loading of JavaScript files can be time consuming. Since long load times are undesirable, we solve this problem with asynchronous loading.
What is Asynchronous Loading?
With asynchronous loading, events take place independent of the main process allowing for the execution of several processes in parallel.
synchronous asynchronous
Process A dispatches Process B. Process A continues to execute in parallel with Process B to completion without depending on one another. In this way, total execution time is reduced and a faster load time is achieved.
Following a single recipe is most likely a(n) 
Synchronous
 task. Cooking three dishes simultaneously is most likely a(n) 
Asynchronous
 task.
Check It! (2 left)
Next

...

3. How to create an Asynchronous function in JavaScript
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="utf-8" />
   <title>Asynchronous</title>
</head>
<body>
   <div id="text"></div>
   <script>
       var msg = document.getElementById("text");
 
       function fun1() {
           setTimeout(function () {
              msg.innerHTML += "<p>fun1 started :)</p>";
              msg.innerHTML += "<p>fun1 ended :)</p>";
           },100);
       }
      function fun2() {
           msg.innerHTML += "<p>fun2 started :)</p>";
           fun1();
           msg.innerHTML += "<p>fun2 ended :)</p>";
       }
 
       fun2();
   </script>
</body>
</html>
Output
fun2 started :)
fun2 ended :)
fun1 started :)
fun1 ended :)
Step by step of previous code:
The code calls function fun2()
The function fun2() shows text “fun2 started :)”
The function fun2() calls function fun1()
The function fun1() waits for 100 ms before outputting its text, but function fun2() does not wait for fun1() to be finished before moving on; fun2() jumps on the next statement immediately and shows the text “fun2 ended :)”
After of 100 ms, function fun1() executes its next statement showing text “fun1 started :)”
Function fun1() then shows text “fun1 ended :)”
Because the two functions can run in parallel, asynchronous JavaScript loads more quickly than synchronous JavaScript.
In the previous code example, we used the setTimeout(Function, Time in milliseconds) function to delay the execution of fun1() by 100ms. This function allows you to pause the execution of a piece of code for the amount of time specified in the function argument before resuming its execution.
Additionally, we can use the setInterval(Function, Time in milliseconds) function to repeatedly execute a piece of code at a specified time interval. This function is useful when we need to run a certain piece of code repeatedly, such as updating the user interface or making periodic requests to a server.
Let’s see it in action:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="utf-8" />
   <title>Asynchronous</title>
</head>
<body>
   <div id="text"></div>
   <script>
       var msg = document.getElementById("text");
 
       function fun1() {
           setInterval(function () {
              msg.innerHTML += "<p>fun1 started :)</p>";
              msg.innerHTML += "<p>fun1 ended :)</p>";
           },60000);
       }
      function fun2() {
           msg.innerHTML += "<p>fun2 started :)</p>";
           fun1();
           msg.innerHTML += "<p>fun2 ended :)</p>";
       }
 
       fun2();
   </script>
</body>
</html>
Output
fun2 started :)
fun2 ended :)
fun1 started :)
fun1 ended :)
fun1 started :)
fun1 ended :)
… 
fun1 started :)
fun1 ended :)
Every 60 seconds, the function fun1() will be called.
Warning: the function setInterval could run infinitely without stopping. Be sure to tell it when to stop.
Next

...

4. How to create an Asynchronous function in JavaScript part 2
Exercise 2:
Build a clock using the function setInterval()
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Clock</title>
</head>
<body>
  <div id="text"></div>
  <script>
       var msg = document.getElementById("text");
      function clock() {
          //code here
      }
      clock();
  </script>
</body>
</html>
Tip: Use the Date object, for more information here.
We can implement asynchronous functions using the async, await, and Promise keywords. The async keyword defines an asynchronous function, which allows us to write asynchronous code that looks and behaves like synchronous code.
By using the async keyword, we can make a function return a Promise, which can be resolved or rejected at a later time. The await keyword is used to wait for the completion of a Promise, which allows us to write code that looks like synchronous code but behaves asynchronously.
Syntax
async function FunctionName(){
    ...
}
await: The “async” function contains “await” which pauses execution of an “async” function. “await” is only valid inside the “async” function.
<!DOCTYPE html>
<html lang="en">

<head>
   <meta charset="utf-8" />
   <title>Asynchronous function using "Async"</title>
</head>

<body>
   <div id="text"></div>

   <script>
       var msg = document.getElementById("text");
       function fun1() {
           return new Promise(function (resolve, reject) {
               setTimeout(function () {
                   msg.innerHTML += "<p>fun1 started :)</p>";
                   msg.innerHTML += "<p>fun1 ended :)</p>";
                   resolve();
               }, 100);
           });
       }

       async function fun2() {
           msg.innerHTML += "<p>fun2 started :)</p>";
           await fun1();
           msg.innerHTML += "<p>fun2 ended :)</p>";
       }

       fun2();
   </script>

</body>

</html>
Output
fun2 started :)
fun1 started :)
fun1 ended :)
fun2 ended :)
In the above example, the engine waits for fun1() to finish its execution before executing the next line. The “await” stops the execution of that code segment until a Promise is received.
Why use await if async is faster?
async allows for faster code execution, but it can cause issues when order or dependencies matter. await can pause execution until a process completes to ensure correct code execution and avoid errors.
Next

...

5. Conclusion & Takeaways
Asynchronous JavaScript is a powerful functionality that can be incredibly helpful in your journey as a web developer. By allowing for multiple processes to run simultaneously, asynchronous code can greatly improve the performance and functionality of your applications.
However, it’s important to be careful when using the setInterval function, which can cause your code to run indefinitely without stopping. To avoid this issue, it’s important to specify when the interval should stop running, either by using clearInterval or by implementing a stop condition within your code.
By using asynchronous JavaScript correctly and being mindful of potential issues, you can take full advantage of its benefits and build high-quality, efficient web applications.
Attribution
Asynchronous JavaScript . (n.d.). https://www.w3schools.com/js/js_asynchronous.asp
GeeksforGeeks. (2021, December 17). How to create an Asynchronous function in Javascript? https://www.geeksforgeeks.org/how-to-create-an-asynchronous-function-in-javascript/
Mark as UncompletedBack to dashboard

...

[Project 14 Notes]

So I was originally going to do

...

I might use aynchronous functions, and json files into project 14.

... 

[Project 14 Outline]

Step 1 integrate slider project - project 10
Step 2 integrate original connections - codepen
Step 3 integrate quiz project - project 12
    Create json file for responses
    Create asynchronous function for responses
        make the text appear on the screen the way it does on CHAT GPT
        - make it appear that someone is actually typing responses - 

[Project 14 Outline]

...

<!-- p14chestnutandhazelconnections -->
<!-- https://kennethlarotyamat.github.io/miscellaneous/javascript/index.js -->
<!-- kennethlarotyamat.github.io/javascript/p14chestnutandhazelconnections.js -->

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\p14chestnutandhazelconnections.js -->
<!-- <script src=" https://kennethlarotyamat.github.io/javascript/p14chestnutandhazelconnections.js "></script> -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\p14chestnutandhazelconnections.js -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->
<!-- check in 30 minutes [1250] -->
<!-- <script src=" https://kennethlarotyamat.github.io/miscellaneous/javascript/index.js "></script> -->
<!-- kennethlarotyamat.github.io/javascript/p14chestnutandhazelconnections.js -->
<!-- swap out javascrip sources -->

...

I'm trying to figure out why this project page doesn't display. I'm basically stuck here, 
i changed the name, it's possible that the name is too long.

...

<!-- it's done thank god that took forever, but this makes project 13 even more complete. -->
<!-- style="center" -->
<!-- https://stackoverflow.com/questions/8366957/how-to-center-an-iframe-horizontally -->
<!-- margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh; -->
<!-- display:block; -->
<!-- 
https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio
aspect-ratio
The aspect-ratio CSS property allows you to define the desired width-to-height ratio of an element's box. This means that even if the parent container or viewport size changes, the browser will adjust the element's dimensions to maintain the specified width-to-height ratio. The specified aspect ratio is used in the calculation of auto sizes and some other layout functions.
At least one of the box's sizes needs to be automatic in order for aspect-ratio to have any effect. If neither the width nor height is an automatic size, then the provided aspect ratio has no effect on the box's preferred sizes. -->
<!--   <iframe  src=".\options-pricing-calculator-project-13-part-2\src\index.html" 
style="margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh; width:100%; height: auto; aspect-ratio: 50/29; " 
scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
allowfullscreen ></iframe>  -->
<!-- <iframe  src=".\options-pricing-calculator-project-13-part-2\src\index.html" style="aspect-ratio: 5/3; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- https://kennethlarotyamat.github.io/miscellaneous/other/project13/Part2Calculator/options-pricing-calculator-project-13-part-2/src/index.html -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\other\project13\miscellaneous\other\project13\Part2Calculator\options-pricing-calculator-project-13-part-2\src\index.html -->
<!-- file:///C:/Users/KLYam/OneDrive/Documents/GitHub/miscellaneous/other/project13/Part2Calculator/options-pricing-calculator-project-13-part-2/src/index.html -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> -->
<!-- /*      
[Resources]              
https://www.linkedin.com/in/marianneshaffer/
https://codepen.io/marnee
https://codepen.io/shafferma08
https://github.com/shafferma08
*/ -->
<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] --> 
<!-- as far as I can tell, project 13 is done, I would have liked to work on a 3rd coding challenge, the one with hackerrank, but, knowing
how hard things are for me, it would probably take 6 hours, and I can use that time for something else, and the project says 2-3, and I did 2,
so, I'm done, the calculator is done, same thing, it's not what I wanted, but, it done according to the requirements. -->

...

<!-- kennethlarotyamat.github.io/CSS/p14chestnutandhazelconnections.css -->

<!-- https://kennethlarotyamat.github.io/miscellaneous/css/index.css -->

<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/CSS/p14chestnutandhazelconnections.css"> -->

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->

<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->

...

<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->
<!-- swap out css references --> <!-- check in 30 minutes [1250] -->
<!-- testing C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css --><!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->
<!-- i need to wait for this page to deploy first, but until then, I am kind of stuck  -->

...

 <!-- .\media\Screenshot 2023-10-26 131509.png 
  
    /* 09 23 2023 09 40 00 Chestnut + Hazel's Miscellaneous Repository README.md

...

"Everything I had done has to be done 
over; I was on the wrong track entirely, 
and after working hard most of that time: 
I'm still only at the beginning." 

- Gustave Flaubert

...

This repository was created as a requirement for
completing project 13. I honestly did not want to
create a whole new repository, but, here we are.

...

William Carlos Williams

"The Young Housewife"  (1916)

At ten A.M. the young housewife
moves about in negligee behind
the wooden walls of her husband's house.
I pass solitary in my car.

Then again she comes to the curb
to call the ice-man, fish-man, and stands
shy, uncorseted, tucking in
stray ends of hair, and I compare her
to a fallen leaf.

The noiseless wheels of my car
rush with a crackling sound over
dried leaves as I bow and pass smiling.

...

WILLIAM CARLOS WILLIAMS

"The Red Wheelbarrow" (1938)

so much depends
upon

a red wheel
barrow

glazed with rain
water

beside the white
chickens

...

William Carlos Williams

"This Is Just To Say" (1962)

I have eaten
the plums
that were in
the icebox

and which
you were probably
saving
for breakfast

Forgive me
they were delicious
so sweet
and so cold

...

Kenneth Larot Yamat

"This Is Just To Say Something About The Young Housewife" (2023)

I totally ate all of the  so many    fried turkeys
that were hanging out
by the red wheelbarrow
you know     the one glazed with
soy sauce and beside the 
                      kentucky fried 
                             kung pao chickens
           which 
themselves were drenched in
              tabasco sauce

I request neither forgiveness
nor do I intend to apologize for
          my actions 

because 

I spent several hours
of quality time
with a certain young housewife

                    who

braless and dressed in negligee 

          and 

whose wild hair suggested
she spent even more additional
even higher quality time with
both the ice man
and the fish man

       either sequentially 
               or 
              simultaneously 
                     neither would surprise me

left me    breathless    exhausted
as well as      famished

I thought I gave a good
account of myself

but then along came 
          the milkman
and    she             still
   had enough energy 
       for 
    round four

I was there
I saw it all

...*/

  -->

...

<!-- ... [Start Solution Area]












function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    var lcArray = joinArray.toLowerCase();
 
    

if (lcArray === testString.toLowerCase()) {
return true;
} else {
return false;
}

}





  
  






... [End Solution Area]

I just completed the codewars version, and I'm coming back here to my leet code version, and it just. the solution I came up with seems 
so alien to me. there's so much stuff going on outside of the function. the two versions are different. obviously. but one. in one case. the 
leet code case, it's more for numbers, there's even a follow - up challenge where, they suggest trying to solve the same problem using 
some kind of mathematical formula. that's not something that can be done with words.

but the word version, the codewars you have to deal with upper and lower case letters, which is something that isn't a problem or 
something to be concerned about when working with numbers. in fact, when i realized. well, it wasn't the only problem, but one 
problem I was having was the to lower case part of the function. Anyway. I'm really glad that's over.

on to the haccker rank palindrome problem.




Good Lord. I can't believe it finally worked.

... [Start Working Area]






function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    var lcArray = joinArray.toLowerCase();
 
    

if (lcArray === testString.toLowerCase()) {
return true;
} else {
return false;
}

}











  
  






... [End Working Area]

function isPalindrome(x) {
 let reverse= x.split('').reverse().join('')
 if (reverse.toLowerCase()==x.toLowerCase()){
 return true;
 }
 else{
return false;
 }
 }


 this looks the most like something I would have done, or 
 the approach I would have taken, but it isn't clear to me 
 why this works, and mine didn't

...

function isPalindrome(x) {
 let reverse= x.split('').reverse().join('')
 if (reverse.toLowerCase()==x.toLowerCase()){
 return true;
 }
 else{
return false;
 }
 }


 this looks the most like something I would have done, or 
 the approach I would have taken, but it isn't clear to me 
 why this works, and mine didn't


function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    var lcArray = joinArray.toLowerCase();
 
    

if (lcArray === testString.toLowerCase()) {
return true;
} else {
return false;
}

}


i'm annoyed that I'm having trouble with something 
as basic as this. annoyed. really annoyed.

...

this one is close:

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
 
    var lcArray = joinArray.toLowerCase()
 
    

if (lcArray === testString) {
return true;
} else {
return false;
}

}

...

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    var lcArray = joinArray.toLowerCase()
    return lcArray; 
    

if (lcArray === testString) {
return true;
} else {
return false;
}

}

...

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    var lcArray = joinArray.toLowerCase()
    return lcArray; 
    

if (lcArray == testString) {
return true;
} else {
return false;
}

}

...

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

if (joinArray() == testString()) {
return true;
} else {
return false;
}

}

...

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

if (joinArray() == testString()) {
return true
} else {
return false
}

}

...

function isPalindrome() {
    let x = 121
    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}
isPalindrome(""); 
console.log(isPalindrome(""));

...

function isPalindrome() {
    let x = 121
    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}
isPalindrome(""); 
console.log(isPalindrome(""));

...

from solutions:

function isPalindrome(x) {
return x.split('').reverse('').join('').toLowerCase() == x.toLowerCase()
}

from solutions:

function isPalindrome(x) {
 let reverse= x.split('').reverse().join('')
 if (reverse.toLowerCase()==x.toLowerCase()){
 return true;
 }
 else{
     return false;
 }
 }

[reflections start]

i'm looking for something that looks like something 
i would have done, because, even if these solutions work,
it's not clear to me how they work. or why they work.

[reflections end]

from solutions:

function isPalindrome(x) {
  x = x.toLowerCase(); 
 let res = '';
  for(let i = 0; i <  x.length; i++){
    res = x[i] + res;
  }
  if (res === x){
    return true;
  }else {
    return false;
  }
}

...

from solutions: 

function isPalindrome(x) {
  return x.toLowerCase().split('').reverse().join('') === x.toLowerCase();
}

...

from solutions: 

function isPalindrome(x) {
  x = x.toLowerCase()
  let a = 0
  let b = x.length
  while (a < b) {
    if (x[a] != x[b-1])
      return false
    a++
    b--
  }
  return true
}

...

from solutions: 

const isPalindrome = x => x.toLowerCase().split('').reverse().join('') == x.toLowerCase();

...

const isPalindrome = x => x.toLowerCase().split('').reverse().join('') == x.toLowerCase();

...

from solutions: 

const isPalindrome = (x) => {
  return x.split("").reverse().join("").toLowerCase() === x.toLowerCase() ? true : false
}

...

this doesn't even look like anything I'm even remotely familiar with.

...

https://www.freecodecamp.org/news/two-ways-to-check-for-palindromes-in-javascript-64fea8191fd7/

https://www.freecodecamp.org/news/two-ways-to-check-for-palindromes-in-javascript-64fea8191fd7/

...

function isPalindrome() {
    let x = 121
    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}
isPalindrome(""); 
console.log(isPalindrome(""));

...

    let x = 121
function isPalindrome() {

    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}
isPalindrome(""); 
console.log(isPalindrome(""));

...

function isPalindrome(x) {
    var x = "  ";
    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}

...

function isPalindrome(x) {
  
var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }

}



https://www.w3schools.com/js/js_if_else.asp

...

var x = "  ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  

...


so, the above function works, the issue now, is to figure out 
how codewars plugs in x, which is something I can't figure out.

...

var x = "hoolooh";
let myString6 = x;

function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(Boolean(reverseString6("") === myString6));

...

I'm really tired. and I'm really hungry.

https://www.youtube.com/watch?v=Q-hFjYyaHDI

https://www.youtube.com/watch?v=rc3o-XQg4Nw

...

Who said people may spend their whole lives climbing the ladder of success only to find once they reach the top that the ladder is leaning against the wrong wall?
Thomas Merton
People may spend their whole lives climbing the ladder of success only to find, once they reach the top, that the ladder is leaning against the wrong wall. Thomas Merton.Jun 3, 2019

...

now where am i?

... [works in console but does not work in codewars problem]

var x = "  ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  



...

... [works in console]

var x = "  ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  



...

var x = " canhohnac ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  

...

var x = " cancorblia ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  

...

... [This seems to work in the console]

var x = " ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  

...

isPalindrome(""); 

console.log(isPalindrome);

...

VM1052:12 Uncaught ReferenceError: myString6 is not defined
    at <anonymous>:12:42

... [worked in leetcode for numbers example]


function isPalindrome(x) {
  
var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }

}

... 

[reflections start] 

still slogging along on this trivial problem. part 2 is a calculator problem, and I'm really just 
not there yet. my idea is to convert the 4 function calculator into an options pricing calculator,
and it feels like doing this is an eternity away.

[reflections end]

...



function isPalindrome(x) {
  // your code here
}
isPalindrome(""); 
console.log(isPalindrome);

...

function isPalindrome(x) {
  // your code here
}
isPalindrome(""); 
console.log(isPalindrome);

...

function isPalindrome(" ") {

    function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 

}
isPalindrome(" ")
console.log(isPalindrome);

...

function isPalindrome(x) {
  // your code here
}

...

function isPalindrome(" ") {
let myString6 = " ";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
}

...

function isPalindrome(" ") {

    function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 

}
isPalindrome(" ")
console.log(isPalindrome);

...

https://www.codecademy.com/forum_questions/505a43764502aa0002006ac3

...

function isPalindrome(" ") {

}

...

function isPalindrome(" ") {
let myString6 = " ";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
}

...


"Everything I had done has to be done over; I was on the wrong track entirely, 
and after working hard most of that time: I'm still only at the beginning." 

- Gustave Flaubert


[Works in Console]

var x = "hoolooh";
let myString6 = x;

function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(Boolean(reverseString6("") === myString6));

...

var x = "hoolooh";
let myString6 = x;

function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

let myString6 = x;
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

[works in console]

var x = "hoolooh";
let myString6 = x;

function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

let myString6 = x;
var x = "hoolooh"
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

let myString6 = "1215";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

function isPalindrome(x) {
let myString6 = "1215";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
}

...

function isPalindrome(" ") {
let myString6 = " ";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
}

...

function isPalindrome(x) {
  


}

...

function isPalindrome(x) {
  
var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }

}

...

I remember the leetcode version being for numbers, and this palindrome problem 
in codewars is more like the version I had in class, it deal with letters rather 
than numbers, a text string rather than a string of numbers.

... [Final Working Version] [works in leetcode problem]

/**
 * @param {number} x
 * @return {boolean}
 */
var isPalindrome = function(x) {

    var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }
    
};

...


I've been goofing off, but even goofing off is exhausting. I'm attending class, but 
I'm still working on Project 13. I'm actually just trying to figure out basic stuff.








I'm really tired. I've only gotten this far. the second problem out of the three.


https://geohack.toolforge.org/geohack.php?pagename=Eiffel_Tower&params=48_51_29.6_N_2_17_40.2_E_region:FR-75_type:landmark

https://geohack.toolforge.org/geohack.php?pagename=Eiffel_Tower&params=48_51_29.6_N_2_17_40.2_E_region:FR-75_type:landmark

https://en.wikipedia.org/wiki/Eiffel_Tower












... [Working version from codio assignment]











let myString6 = "1215";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6("");
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));














... [Working version from codio assignment]

...

"Everything I had done has to be done over; I was on the wrong track entirely, and after working hard most of that time: I'm still only at the beginning." - Gustave Flaubert

...

"Everything I had done has to be done over; I was on the wrong track entirely, and after working hard most of that time, I'm still only at the beginning."  - Gustave Flaubert, referenced in Paul Cooper's documentary on Carthage

...

Everything I had done has to be done over; I was on the wrong track entirely, and after working hard most of that time, I'm still only at the beginning.

- Gustave Flaubert, referenced in Paul Cooper's documentary on Carthage

...

I don't love pain for it's own sake and I don't pursue and desire pain just to feel it. - Adapted from Lorem Ipsum, by Cicero

...

https://www.youtube.com/watch?v=2mqX9twdyYo

gustave flaubert and after working hard on it most of that time, i'm still only at the beginning

...

let myString6 = "1215";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6("");
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

... [Final Working Version]



var x = 121;

var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

function isPalindrome() 
{    
      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }
} 
isPalindrome("");

console.log(isPalindrome(""));



... [Final Working Version] [works in leetcode problem]

/**
 * @param {number} x
 * @return {boolean}
 */
var isPalindrome = function(x) {

    var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }
    
};

... -->

...

  <!-- StartUpNV, 300 S. 4th St #180, Las Vegas, NV 89101, United States, +1.775.393.9701

Unsubscribe Manage preferences

i really wanted to participate in startupnv, but, other things got in the way.-->

  <!--  -->

          <!-- id="q6i " name="q6n " value="q6v "  -->

        <!-- right when I think i'm done, something else breaks -->
        <!-- References: https://www.youtube.com/watch?v=U0CGsw6h60k      /     https://www.youtube.com/watch?v=Vhh-XF01Ats   -->
        <!-- // Question 6 this is taking forever. i don't know why i'm still working on this. -->
        <!-- It's almost done, and the hard part is already over. so I'm just going to finish it. I don't want a portfolio of half completed projects. -->

                <!-- // Question 7 -->

        <!-- id="q7i " name="q7n " value="q7v " -->



                <!-- // Question 8 -->

        <!-- id="q8i " name="q8n " value="q8v " -->

                    <!-- good lord. it worked. i really don't want to do anything else with this. this already took an eternity and i don't want to mess anything up. but 
            
            There is one more thing that I think needs to be fixed. -->

            <!-- I just check. it works. I am triumphant -->

                  <!-- </form> -->
      <!-- reactivate this closing tag if form relocation tags doesn't work -->

      <!-- return form tag here if relocation is unsucessful -->

          <!-- potential location to move form tags -->

          <!-- // $('.form-check-input8').attr('disabled',false).reset().on('mouseenter mouseleave') ;
  // $('.form-check-input7').attr('disabled',false).reset().on('mouseenter mouseleave') ;
  // $('.form-check-input6').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input5').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input4').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input3').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input2').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input1').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
 


//   References:         I used ChatGPT. What a nightmare. This is going to take a while. see screenshots. 
//                       kennethlarotyamat.github.io\media\Screenshot 2023-10-25 102138.png
//                       kennethlarotyamat.github.io\media\Screenshot 2023-10-25 102145.png
//                       kennethlarotyamat.github.io\media\Screenshot 2023-10-25 102151.png

  //   References:     https://stackoverflow.com/questions/3786694/how-to-reset-clear-form-through-javascript
  //                   https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event
  //                   https://kennethlarotyamat.github.io/other/project12/project12.html

  // https://api.jquery.com/category/selectors/form-selectors/

  // the correct word for boring. in spanish. is not: tedioso. it's aburrido

  // actually, it's not that bad: form-check-input8 just has to be. it's actually easy, even if i have to do eight of them.

  // form-check-input8


  // 
  // 

      // $('.form-check-input8').attr('disabled',false).reset().on('mouseenter mouseleave') ;
    // $('.form-check-input7').attr('disabled',false).reset().on('mouseenter mouseleave') ;
    // $('.form-check-input6').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input5').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input4').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input3').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input2').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input1').attr('disabled',false).reset().on('mouseenter mouseleave') ; 

// $('.resetExamButton').on('click', function() {
// $('.form-check-input8').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
// });

// $('.resetExamButton').on('click', function() {
//   $('.form-check-input7').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//   });

//   $('.resetExamButton').on('click', function() {
//     $('.form-check-input6').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//     });

//     $('.resetExamButton').on('click', function() {
//       $('.form-check-input5').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//       });

//       $('.resetExamButton').on('click', function() {
//         $('.form-check-input4').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//         });

//         $('.resetExamButton').on('click', function() {
//           $('.form-check-input3').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//           });

//           $('.resetExamButton').on('click', function() {
//             $('.form-check-input2').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//             });

//             $('.resetExamButton').on('click', function() {
//               $('.form-check-input1').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//               });

              // what a nightmare. let's see if this works.



              // https://www.freecodecamp.org/news/javascript-refresh-page-how-to-reload-a-page-in-js/#:~:text=The%20simplest%20way%20to%20refresh,and%20loading%20the%20latest%20content.
              // this is probably the easiest thing to do, unless I can really figure this out.
              // but in this case. I would use the reset button to reload the page. same result. so. i think i'll just use it.
              // do the ends. justify the means?
              // well, in this case. yeah. i think so.

              //  https://www.geeksforgeeks.org/how-to-refresh-a-page-using-jquery/



              // $('.resetExamButton').on('click', function() {

              //   location.reload(true);
              
              
              // });

              // $('.resetExamButton').ready(function() {
              //   location.reload();
              // });

              // this one did not work. do not test it out to see what it does .


              // $('project12.html').ready(function() {
                // Attach a click event handler to the button element with the id "reloadButton"
                // $('#resetExamButton').click(function() {
                  // Reload the page when the button is clicked
                  // location.reload();
                // });
              // });




            //   $(document).ready(function () {
            //     $('#resetExamButton').click(function () {
            //         location.reload(true);
            //         alert('Resetting Exam');
            //     });
            // });

          //   $(document).ready(function () {
          //     $("button").click(function () {
          //         location.reload(true);
          //         alert('Reloading Page');
          //     });
          // });

          // https://www.geeksforgeeks.org/how-to-refresh-a-page-using-jquery/
 -->

 <!-- //  it works. thank god. this took forever. none of the resources i used helped. at all. -->

 <!--   // $('.feedbackquestion8').text("Don't be a philosopher. just take the exam and get on with your life. that'll be $495 by the way.");
  // good god it's starting to work. -->

  <!-- // Question 8 -->

  <!-- // Question 7 -->

  <!-- //  References: https://www.youtube.com/watch?v=FDRX3XxAOY4     https://genius.com/Clyde-carson-slow-down-lyrics [Hook]
// I tell 'em, slow down
// You know you can't catch me
// I move too fast on the gas, don't chase me
// Slow down, slow down

// what was my estimate for SPLG? -->

<!-- // Question 6 I'm almost done with this. thank god. 10252023 0620 -->

<!-- // Question 5 References: https://www.youtube.com/watch?v=U0CGsw6h60k  /   https://www.youtube.com/watch?v=Vhh-XF01Ats -->

<!-- // Question 4 -->

<!-- //  Question 3 DONE -->

<!-- //  Question 2 10252023 0605 what a nightmare. i had a special hover effect specifically in place for the green book response where the hover effect is green, rather than blue, it broke everything and then i had to fix it. it took pretty much over a million years. -->
<!-- // Question 1 -->

...

So I figured out what the issue is: The issue has to do with deployments to GitHub being delayed, but it isn't clear to me what 
is causing pages to be delayed, or what's causing the deployments to be delayed.

...

<!-- <!-- Start Estimage Template -->
<!-- <p>

    <br>        Estimage for:   SPLG, 10/25/2023        <br>
    <br>        Range AMT:      .70
    <br>        Midpoint:       49.85 
    <br>        Range L/H:      49.50 - 50.20
    <br>        O/C:            49.90 - 49.70
    
</p> -->
<!-- End Estimage Template -->

<!-- Start Image Template -->
<!-- End Image Template --> -->

...

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!-- // C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js
//  p14chestnutandhazelconnections -->

<!-- /* <iframe  src=".\options-pricing-calculator-project-13-part-2\src\index.html" 
style="margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh; width:100%; height: auto; aspect-ratio: 50/29; " 
scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
allowfullscreen ></iframe>  */
 /* p14chestnutandhazelconnections */ -->

 ...

<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> -->

...

<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!--[Remote Reference] <script src="https://kennethlarotyamat.github.io/javascript/project14.js"></script> -->

<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> -->

...

<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> -->

...

/* 10252023 0605 what a nightmare. i had a special hover effect specifically in place for the green book response where 
the hover effect is green, rather than blue, it broke everything and then i had to fix it. it took pretty much over a million years. */

...

/* <!-- <script src="https://kennethlarotyamat.github.io/miscellaneous/index.js"></script> -->

<!-- <script src="https://[username].github.io/[repository]/[filename].js"></script> -->

<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/index.css"> -->
<!-- <script src="https://kennethlarotyamat.github.io/miscellaneous/index.css"></script> -->

<!-- <script src="https://kennethlarotyamat.github.io/miscellaneous/index.js"></script> -->

<!-- <script src="https://[username].github.io/[repository]/[filename].js"></script> -->
 */

 ...

 So write now I'm just cleaning up the files that I'll be using for project 14

 ...

 
//  ... [Start Solution Area]













//  var x = 121;
 
//  var digits = x.toString().split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome() 
//  {    
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
//  } 
//  isPalindrome("");
 
//  console.log(isPalindrome(""));
 
 
 
 
 
 
 
 
 
 
 
 
 
//  ... [End Solution Area]
 
//  I just completed the codewars version, and I'm coming back here to my leet code version, and it just. the solution I came up with seems 
//  so alien to me. there's so much stuff going on outside of the function. the two versions are different. obviously. but one. in one case. the 
//  leet code case, it's more for numbers, there's even a follow - up challenge where, they suggest trying to solve the same problem using 
//  some kind of mathematical formula. that's not something that can be done with words.
 
//  but the word version, the codewars you have to deal with upper and lower case letters, which is something that isn't a problem or 
//  something to be concerned about when working with numbers. in fact, when i realized. well, it wasn't the only problem, but one 
//  problem I was having was the to lower case part of the function. Anyway. I'm really glad that's over.
 
//  on to the haccker rank palindrome problem.
 
 
 
 
 
//  [Working Area Start]
 
//  ... [Final Working Version]
 
 
 
//  var x = 121;
 
//  var digits = x.toString().split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome() 
//  {    
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
//  } 
//  isPalindrome("");
 
//  console.log(isPalindrome(""));
 
 
 
//  ... [Final Working Version] [works in leetcode problem]
 
//  /**
//   * @param {number} x
//   * @return {boolean}
//   */
//  var isPalindrome = function(x) {
 
//      var digits = x.toString().split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
     
//  };
 
//  ...
 
 
//  let x;
 
//  var digits = x.toString().split('').reverse();
//  var reverseDigits = digits.map(Number);
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome(x) 
//  {    
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
//  } 
//  isPalindrome("");
 
//  ...
 
//  var x = number;
 
//  var digits = x.toString().split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome() 
//  {    
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
//  } 
//  isPalindrome("");
 
//  console.log(isPalindrome(""));
 
//  ...
 
//  let digits = x;
//  var digits = x.toString().split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome(x) 
//  {    
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
//  } 
//  isPalindrome("");
 
//  console.log(isPalindrome(""));
 
//  ...
 
//  var x;
//  var number = x;
 
//  var digits = x.toString().split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome() 
//  {    
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
//  } 
//  isPalindrome("");
 
//  console.log(isPalindrome(""));
 
//  ...
 
//  let x;
//  let number
 
 
//  var digits = number.string(x).split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome() 
//  {    
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
//  } 
//  isPalindrome("");
 
//  console.log(isPalindrome(""));
 
//  ...
 
//  var x = 121;
 
//  var digits = x.toString().split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome() 
//  {    
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }
//  } 
//  isPalindrome("");
 
//  console.log(isPalindrome(""));
 
//  ... 
 
//  let myString6 = "1215";
//  function reverseString6() 
//  {    
//      var splitString6 = myString6.split(""); 
//      var reverseArray6 = splitString6.reverse();  
//      var joinArray6 = reverseArray6.join("");     
//      return joinArray6; 
//  } 
//  reverseString6("");
//  console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
 
//  ...
 
//  [Working Area End]
 
//  ...
 
//  function isPalindrome()
//  {
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }   
//  }
//  isPalindrome("");
//  console.log(isPalindrome);
//  ...
 
//  var x = 123456;
 
//  var digits = num.toString().split('').reverse();
//  var reverseDigits = digits.map(Number)
//  console.log(reverseDigits);
 
//  var joinreverseDigits = reverseDigits.join('');
//  console.log(joinreverseDigits);
 
//  function isPalindrome
//  {
//        if (joinreverseDigits == x){
//            return true
//        } else {
//            return false
//        }   
//  }
 
//  console.log(isPalindrome);
 
//  ...
 
//  let myString6 = "1215";
//  function reverseString6() 
//  {    
//      var splitString6 = myString6.split(""); 
//      var reverseArray6 = splitString6.reverse();  
//      var joinArray6 = reverseArray6.join("");     
//      return joinArray6; 
//  } 
//  reverseString6("");
//  console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
 
//  ...
 
//  /**
//   * @param {number} x
//   * @return {boolean}
//   */
//  // var isPalindrome = function(x) {
 
//  //     var result = Number(String(x).split('').reverse().join(''))
 
//  //     if (result == x){
//  //         return true
//  //     } else {
//  //         return false
//  //     }
     
//  // };
 
//  ...
 
//  [Reflections Start] 
 
//  I'm going to take a nap. this is a nightmare.
 
//  I really wanted to attend this: https://startupnv.org/maggie-saling-understanding-tam-sam-som-reno-nv/ 
 
//  Here is another thing I noticed, the person who used the same approach that I did, well, maybe 
//  it's more or less the most common approach. he used an if/else statement, and I used a Boolean.
 
//  I selected this palindrome problem because I've done it before in class. I don't know 
//  why I seem to have to learn JavaScript all over again every time I come around to it.
 
 
 
//  [Reflections End]
 
//  ... 
 
//  [working example]
 
//  let myString6 = "racecar";
//  function reverseString6() 
//  {    
//      var splitString6 = myString6.split(""); 
//      var reverseArray6 = splitString6.reverse();  
//      var joinArray6 = reverseArray6.join("");     
//      return joinArray6; 
//  } 
//  reverseString6("");
//  console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
 
//  ...
 
//  ...
 
 
 
//  console.log("Part 1");
//  console.log(" ");
 
//  let myString = "This is not a palindrome";
 
 
//  // console.log(myString);
 
//  function reverseString() {
     
//      var splitString = myString.split(""); 
 
  
 
//      var reverseArray = splitString.reverse(); 
  
//      var joinArray = reverseArray.join(""); 
     
     
//      return joinArray; 
//  }
  
//  reverseString("");
 
//  console.log(reverseString());
 
//  console.log(" ");
//  console.log("Part 2");
//  console.log(" ");
 
//  let myString2 = "but it doesn't really matter anyway.";
 
//  function concatStrings() {
     
//      var twoStrings = myString.concat(", ",myString2); 
 
  
 
     
     
//      return twoStrings; 
//  }
//  concatStrings();
 
//  console.log(concatStrings());
 
//  console.log(" ");
//  console.log("Part 3");
//  console.log(" ");
 
//  let partThree = concatStrings()
 
//  function vowelSearch() {
     
//      var lowerCaseString = partThree.toLowerCase(myString.concat(", ",myString2));
//      var splitLcs = lowerCaseString.split("")
//      // var findA = splitLcs.replace("a","1")
//      // var findA = splitLcs.find("a")
//      // var findA = splitLcs.find(a)
//      // var findA = splitLcs.find("a")
//      // var findA = splitLcs.filter()
//      return splitLcs; 
//  }
//  vowelSearch();
//  // console.log(vowelSearch());
 
//  let vowelSearchArray = vowelSearch()
 
//  // console.log(vowelSearchArray);
 
//  const newArrayA = vowelSearchArray.filter(function(element) {
//    return element == "a";
//  });
 
//  // console.log(newArrayA);
 
//  const newArrayE = vowelSearchArray.filter(function(element) {
//    return element == "e";
//  });
 
//  // console.log(newArrayE);
 
//  const newArrayI = vowelSearchArray.filter(function(element) {
//    return element == "i";
//  });
 
//  // console.log(newArrayI);
 
//  const newArrayO = vowelSearchArray.filter(function(element) {
//    return element == "o";
//  });
 
//  // console.log(newArrayO);
 
//  const newArrayU = vowelSearchArray.filter(function(element) {
//    return element == "u";
//  });
 
//  // console.log(newArrayU);
 
//  // let myArray13 = ["a", "b", "c", "d", "e", "f", "a","e","e",];
//  // const newArray21 = myArray13.filter(function(element) {
//  //   return element == "e";
 
//  // });
 
//  // console.log(  newArray21);  
 
//  let allVowels = newArrayA.concat(newArrayE, newArrayI, newArrayO, newArrayU);
 
//  // console.log(  allVowels)
 
//  let numberOfVowels = allVowels.length;
 
//  console.log(  "Number of Vowels in String = " + numberOfVowels);
 
//  console.log(" ");
//  console.log("Part 4");
//  console.log(" ");
 
//  let p4String = (  myString + ", " + myString2 + " Number of Vowels in String = " + numberOfVowels);
 
//  // console.log(p4String);
 
//  function vowelSwap() {
     
//      var aForOh = p4String.replace(/a/g, "o"); 
 
  
 
     
     
//      return aForOh; 
//  }
//  vowelSwap();
 
//  console.log(vowelSwap());
 
//  console.log(" ");
//  console.log("Part 5");
//  console.log(" ");
 
//  let p5sTring = vowelSwap();
 
//  function noSpace() {
     
//      var iGottaBlankSpaceBaby = p5sTring.replace(/ /g, ""); 
 
  
 
     
     
//      return iGottaBlankSpaceBaby; 
//  }
//  noSpace();
 
//  console.log(noSpace());
 
//  console.log(" ");
//  console.log("Part 6");
//  console.log(" ");
 
//  let myString6 = "racecar";
 
 
//  // console.log(myString);
 
//  function reverseString6() {
     
//      var splitString6 = myString6.split(""); 
 
  
 
//      var reverseArray6 = splitString6.reverse(); 
  
//      var joinArray6 = reverseArray6.join(""); 
     
     
//      return joinArray6; 
//  }
  
//  reverseString6("");
 
//  console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
 
//  console.log(" ");
//  console.log("Part 7");
//  console.log(" ");
 
//  let myString7 = "appkhgkgkjhghjkgkjhbkhjb8les";
 
//  function isStringAlphaNumeric() {
 
//      var toLowerCase7 = myString7.toLowerCase("");
//      var splitString7 = toLowerCase7.split(""); 
//      var trueFalse7 = splitString7.includes("q","w","e","r","t","y","u","i","o","p","a","s","d","f","g","h","j","k","l","z","x","c","v","b","n","m","1","2","3","4","5","6","7","8","9","0",);
     
 
     
     
//      return trueFalse7 ; 
//  }
 
//  console.log(isStringAlphaNumeric());
 
//  ...
 
//  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
 
//  ...
 
//  [Good Lord. This is such a minor victory point]
 
//  var num = 123456;
 
//  var digits = num.toString().split('').reverse();
//  var realDigits = digits.map(Number)
//  console.log(realDigits);
 
//  var joinRealDigits = realDigits.join('');
//  console.log(joinRealDigits);
 
//  ...
 
 
 
//  var num = 123456;
//  var digits = num.toString().split('').reverse().join('');
//  var realDigits = digits.map(Number)
//  console.log(realDigits);
 
 
//  ...
 
 
 
//  var Number = 123456;
//  var digits = Number.toString().split('').reverse();
//  var realDigits = digits.map(Number);
//  console.log(realDigits);
 
 
 
 
//      {Number(String(x).split('').reverse().join(''))        }
 
 
 
 
//  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString
 
 
 
 
//  var num = 123456;
//  var digits = num.toString().split('').reverse().join('');
//  var realDigits = digits.map(Number)
//  console.log(realDigits);
 
 
 
 
//  var num = 123456;
//  var digits = num.toString().split('').reverse();
//  var realDigits = digits.map(Number)
//  console.log(realDigits);
 
 
 
//  var num = 123456;
//  var digits = num.toString().split(' ');
//  var realDigits = digits.map(Number);
//  console.log(realDigits);
 
 
 
//  var num = 123456;
//  var digits = num.toString().split('');
//  var realDigits = digits.map(Number)
//  console.log(realDigits);
 
 
 
 
//  Number(String(x).split('')
 
 
 
//  .join('')
 
 
 
//  )
 
 
 
//  file:///C:/Users/KLYam/OneDrive/Documents/GitHub/miscellaneous/other/project13/LeetCode/console.html
 
//  https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_split6
 
//  https://www.w3schools.com/jsref/jsref_split.asp
 
 
 
 
//  var num = 123456;
//  var digits = num.toString().split('');
//  var realDigits = digits.map(Number)
//  console.log(realDigits);
 
 
 
 
//  let text = 121;
//  const chars = text.split("");
//  console.log(chars);
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
//  Number(String(x).split('').reverse().join(''))
 
//  let text = "121";
//  const myArray = text.split(" ");
//  console.log(myArray);
 
 
 
 
 
//  let x = 121;
 
//  var number = x;
//  const myArray = number.split(" ");
//  console.log(myArray);
 
 
 
//  let x = 121;
 
//  let text = x;
//  const myArray = text.split(" ");
//  console.log(myArray);
 
 
 
 
 
 
//  let x = 121;
 
//  console.log(x);
 
//  let text = x;
//  const myArray = text.split(" ");
 
//  console.log(myArray);
 
//  <!DOCTYPE html>
//  <html>
//  <body>
 
//  <h1>JavaScript Strings</h1>
//  <h2>The split() Method</h2>
 
//  <p>split() splits a string into an array of substrings, and returns the array:</p>
 
//  <p id="demo"></p>
 
//  <script>
//  let text = "How are you doing today?";
//  const myArray = text.split(" ");
 
//  document.getElementById("demo").innerHTML = myArray; 
//  </script>
 
//  </body>
//  </html>
 
 
 
 
 
 
 
 
//  let x = 121;
 
//  console.log(x);
 
//  var isPalindrome = function(x) {
 
//      var palindromeTester = Number(String(x).split('').reverse().join(''))
 
//      if (result == x){
//          return true
//      } else {
//          return false
//      }
     
//  };
 
//  console.log(isPalindrome);
 
 
//  [End]
 
//  let palindromeTester
 
//  var isPalindrome = function(x) {
 
//      var palindromeTester = Number(String(x).split('').reverse().join(''))
 
//      if (result == x){
//          return true
//      } else {
//          return false
//      }
     
//  };
 
//  console.log(palindromeTester);
 
 
 
 
 
 
//  [Notes]
 
//  Intro to Variables
//  Variables are used in programming to store and manipulate data. In JavaScript, there are three different keywords used for declaring variables: var, let, and const. The main difference between these is something called “scope” which we will cover later.
//  var:
//  The var keyword is used to declare a variable globally or locally in a function. Variables declared with var are function-scoped, meaning they are only accessible within the function in which they are declared or in the global scope if they are declared outside a function
//  let:
//  The let keyword is used to declare a block-scoped variable. This means that variables declared with let are only accessible within the block they are declared in, including any nested blocks.
//  const:
//  The const keyword is used to declare a block-scoped variable that cannot be reassigned. This means that once a variable is declared with const, its value cannot be changed. However, note that the value of an object or an array declared with const can be modified, but the variable cannot be reassigned to a different value.
//  💡 PRO TIP: The var keyword, though it is still valid, is an older way of declaring variables. Almost all modern JavaScript will use either let or const!
//  When deciding between let and const, think about whether the value of the variable should be allowed to change or not. If it should not be changed, use const; otherwise, use let.
//  Next, let’s talk briefly about naming conventions. This applies to naming both variables and functions, when the name given is made up of several words. The most common convention in JavaScript is to use what is called camel case. This means that the first letter of the first word in the name is lowercase, while in each subsequent word in the name the first letter is uppercase. Let’s look at an example to illustrate this:
//  mySuperAwesomeVariableName
//  While this example may be a bit over the top, it illustrates the point. The reason why this is the most commonly used naming convention is because it helps greatly with code readability.
//  With that in mind, let’s move on to another important point – namely, the difference between declaring a variable and initializing a variable. Declaring a variable means simply creating a variable (e.g. - let myVariable), while initializing a variable means giving it an initial value. With let you can declare a variable without initializing it; with const, however, you MUST also give it an initial value.
//  Let’s look at some examples of declaring variables and constants in JavaScript:
 
 
 
 
 
//  let x = 10;
//  x += 5; // equivalent to x = x + 5;
 
//  console.log(x); // output: 15
 
 
//  let y = 20;
//  y -= 10; // equivalent to y = y - 10;
 
//  console.log(y); // output: 10
 
//  let num1 = 10;
//  let num2 = 5;
 
//  let additionExample = num1 + num2;
 
//  console.log(additionExample); // Output: 15
 
//  function logMessage() {
//    console.log("Hello, world!");
//  }
 
 
//  setInterval(logMessage, 1000);
 
//  const arr1 = [1, 2, 3];
//  const arr2 = [4, 5, 6];
//  const combinedArr = [...arr1, ...arr2];
//  console.log(combinedArr); // Output: [1, 2, 3, 4, 5, 6]
 
//  [End]
 
//  var x = 121
//  var isPalindrome = function(x) {
 
//      var result = Number(String(x).split('').reverse().join(''))
 
//      if (result == x){
//          return true
//      } else {
//          return false
//      }
 
//  };
 
//  console.log(isPalindrome);
 
//  if (x == isPalindrome) {
//    console.log("This is a palindrome.");
//  } else {
//    console.log("This is not a palindrome.");
//  }
 
//  console.log(isPalindrome);    
 
//  [Start]
 
//  var x = 1215
//  var isPalindrome = function(palindromeTester) {
 
 
//   var reverse = 0;
//      var copy = x;
 
//      while (copy > 0) {
//        const digit = copy % 10;
//        reverse = reverse * 10 + digit;
//        copy = ~~(copy / 10);
//      }
 
//      return reverse == x;
//  }
 
//  console.log(isPalindrome);
 
//  if (x == isPalindrome) {
//    console.log("This is a palindrome.");
//  } else {
//    console.log("This is not a palindrome.");
//  }
 
//  [End]
 
//  [Reflections Start]
 
//  I think that I'm slowly figuring this out.
 
//  ...
 
//  What happened. well I found that there is a hide button on Slack, and I can basically
//  tune out anyone who I really don't need to waste time interacting with. It's useless to 
//  tell me that I don't know something, after I've clearly stated that I don't know something,
//  and that I'm seeking information about how to resolve it. Useless. Aggravating.
 
//  Anyway. I looked at other LeetCode solutions in the solutions section, and they work in LeetCode, but 
//  I don't know how to make them work in a regular environment, and so, like. learning things in LeetCode
//  are going to be useless unless I can figure out how to use these lessons in a regular environment.
 
//  I can't believe it's Saturday already.
 
//  [Reflections Start]
 
//  [Notes from Course Material Start]
 
//  Comparison Operators
 
//  Comparison operators are used in JavaScript to compare values and return a Boolean value (true or false). 
 
//  There are several comparison operators available in JavaScript:
 
//  Equal to (==): Returns true if two values are equal, regardless of their data types.
//  Not equal to (!=): Returns true if two values are not equal.
//  Strict equal to (===): Returns true if two values are equal and have the same data type.
//  Strict not equal to (!==): Returns true if two values are not equal or do not have the same data type.
//  Greater than (>): Returns true if one value is greater than another.
//  Less than (<): Returns true if one value is less than another.
//  Greater than or equal to (>=): Returns true if one value is greater than or equal to another.
//  Less than or equal to (<=): Returns true if one value is less than or equal to another.
 
//  [Notes from Course Material End]
 
//  [LeetCode Reflections Start]
 
//  [References:]   [https://firefox-source-docs.mozilla.org/devtools-user/web_console/index.html]
//                  [https://stackoverflow.com/questions/20256760/javascript-console-log-to-html]
//                  [https://en.wikipedia.org/wiki/Major-General%27s_Song]
//                  [https://stackoverflow.com/questions/20256760/javascript-console-log-to-html]
 
//  One of the issues that I'm having with JavaScript is that I can't really see what 
//  I'm doing.
 
//  ...
 
//  I really don't know how to work with this LeetCode stuff.
//  I started off with this one problem, but, I had to shift to a different
//  one.
 
//  I'm shifting to the palindrome question.
 
//  [LeetCode Reflections End]
 
//  [Thread Start]
 
//  Kenneth Larot Yamat
 
//  This company reached out to me on LinkedIn, but when I looked at 
//  their website it appeared rife with irregularities - https://thinkfish.co - 
//  but it got me thinking about pitching a business idea and seeking funding, but 
//  I really don't know much about that process other than what I've seen on 
//  SharkTank and a college elective that I took 14 years ago.
 
//  Classmate
 
//  The fact that you referenced a staged reality show and a singular 
//  class you took 14 yrs ago as your know-how. I would suggest that you 
//  stick with this and make it work. I promise pitching and gathering 
//  funding for an on-the-whim idea is absolutely not as simple as TV makes it seem.
 
//  Kenneth Larot Yamat
 
//  My business idea would either be a software program or 
//  a website, or some kind of mobile app. 
 
//  [Thread End]
 
//  Kenneth Larot Yamat [Reflections Start]
 
//  I need to stay away from people like this. I already noted that I don't really 
//  have experience pitching business ideas and seeking funding, but she seems to 
//  flip it around as though I was listing it as a kind of extensive expertise or something. 
 
//  There isn't really an option to block people in slack, but, people who are cynical in 
//  a way that really isn't helpful, like, I don't know what to do about that.
 
//  Saying that it's not easy is something that I'm already aware of, and telling me that 
//  I don't know how to do it is something that I'm also already aware of. I was posting
//  it to see if anyone had any ideas about how the process worked. 
 
//  I don't need someone to tell me I don't know how to do something. I already know that.
//  The other thing is that she seems to put forward the idea that starting a business, and 
//  attending class are in some way mutually exclusive, and I try to point out that the two are 
//  actually concurrent.
 
//  I don't know what it is, but I always come across this:
//  I ask for help, and the response is usually: 
//  You don't know what you're doing.
//  and.
 
//  I'm just thinking: well that couldn't be more obvious, if 
//  I knew what I was doing, I wouldn't 
//  be asking for help. There was another one of these situations.
 
//  Kenneth Larot Yamat [Reflections End]
 
//  [Thread Start]
 
//  Kenneth Larot Yamat
 
//  A role that I applied for stated: Experience in front-end 
//  frameworks like Angular, React, Backbone, and JQuery
//  I listed bootstrap as a front-end framework that I have 
//  experience with, but do these other frameworks work in 
//  essentially the same way as bootstrap?
 
//  Classmate
 
//  no, bootstrap is just for design, and don't list 
//  things you don't know in resume just to pass ATS
 
//  [Thread End]
 
//  Kenneth Larot Yamat [Reflections Start]
 
//  This was another aggravating conversation. This person insunuates that I plan on lying on my resume. 
//  The other thing is that I think of front-end as referring to design, rather than function. This was 
//  another person I wanted to block. I already deal with a lot of useless stuff as it is. right. I don't 
//  need more useless conversations, especially ones that aggravate me.
 
//  The other thing is: These might not be real people, they might just be cynical remark chatbot or 
//  negative energy chatbots or cynical remark text generators. so I shouldn't pay too much attention
//  to these kind of comments.
 
//  Are you a cynical remark text generator? My business idea would either 
//  be a software program or a website, or some kind of mobile app.
 
//  Are you a cynical remark text generator? 
 
//  I changed that. I don't need to be as toxic as other people.
 
//  Kenneth Larot Yamat [Reflections End]
 
 
 
 
 
 
// ... [Start Solution Area]













// var x = 121;

// var digits = x.toString().split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome() 
// {    
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
// } 
// isPalindrome("");

// console.log(isPalindrome(""));













// ... [End Solution Area]

// I just completed the codewars version, and I'm coming back here to my leet code version, and it just. the solution I came up with seems 
// so alien to me. there's so much stuff going on outside of the function. the two versions are different. obviously. but one. in one case. the 
// leet code case, it's more for numbers, there's even a follow - up challenge where, they suggest trying to solve the same problem using 
// some kind of mathematical formula. that's not something that can be done with words.

// but the word version, the codewars you have to deal with upper and lower case letters, which is something that isn't a problem or 
// something to be concerned about when working with numbers. in fact, when i realized. well, it wasn't the only problem, but one 
// problem I was having was the to lower case part of the function. Anyway. I'm really glad that's over.

// on to the haccker rank palindrome problem.





// [Working Area Start]

// ... [Final Working Version]



// var x = 121;

// var digits = x.toString().split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome() 
// {    
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
// } 
// isPalindrome("");

// console.log(isPalindrome(""));



// ... [Final Working Version] [works in leetcode problem]

// /**
//  * @param {number} x
//  * @return {boolean}
//  */
// var isPalindrome = function(x) {

//     var digits = x.toString().split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
    
// };

// ...


// let x;

// var digits = x.toString().split('').reverse();
// var reverseDigits = digits.map(Number);
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome(x) 
// {    
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
// } 
// isPalindrome("");

// ...

// var x = number;

// var digits = x.toString().split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome() 
// {    
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
// } 
// isPalindrome("");

// console.log(isPalindrome(""));

// ...

// let digits = x;
// var digits = x.toString().split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome(x) 
// {    
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
// } 
// isPalindrome("");

// console.log(isPalindrome(""));

// ...

// var x;
// var number = x;

// var digits = x.toString().split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome() 
// {    
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
// } 
// isPalindrome("");

// console.log(isPalindrome(""));

// ...

// let x;
// let number


// var digits = number.string(x).split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome() 
// {    
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
// } 
// isPalindrome("");

// console.log(isPalindrome(""));

// ...

// var x = 121;

// var digits = x.toString().split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome() 
// {    
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }
// } 
// isPalindrome("");

// console.log(isPalindrome(""));

// ... 

// let myString6 = "1215";
// function reverseString6() 
// {    
//     var splitString6 = myString6.split(""); 
//     var reverseArray6 = splitString6.reverse();  
//     var joinArray6 = reverseArray6.join("");     
//     return joinArray6; 
// } 
// reverseString6("");
// console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

// ...

// [Working Area End]

// ...

// function isPalindrome()
// {
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }   
// }
// isPalindrome("");
// console.log(isPalindrome);
// ...

// var x = 123456;

// var digits = num.toString().split('').reverse();
// var reverseDigits = digits.map(Number)
// console.log(reverseDigits);

// var joinreverseDigits = reverseDigits.join('');
// console.log(joinreverseDigits);

// function isPalindrome
// {
//       if (joinreverseDigits == x){
//           return true
//       } else {
//           return false
//       }   
// }

// console.log(isPalindrome);

// ...

// let myString6 = "1215";
// function reverseString6() 
// {    
//     var splitString6 = myString6.split(""); 
//     var reverseArray6 = splitString6.reverse();  
//     var joinArray6 = reverseArray6.join("");     
//     return joinArray6; 
// } 
// reverseString6("");
// console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

// ...

// /**
//  * @param {number} x
//  * @return {boolean}
//  */
// // var isPalindrome = function(x) {

// //     var result = Number(String(x).split('').reverse().join(''))

// //     if (result == x){
// //         return true
// //     } else {
// //         return false
// //     }
    
// // };

// ...

// [Reflections Start] 

// I'm going to take a nap. this is a nightmare.

// I really wanted to attend this: https://startupnv.org/maggie-saling-understanding-tam-sam-som-reno-nv/ 

// Here is another thing I noticed, the person who used the same approach that I did, well, maybe 
// it's more or less the most common approach. he used an if/else statement, and I used a Boolean.

// I selected this palindrome problem because I've done it before in class. I don't know 
// why I seem to have to learn JavaScript all over again every time I come around to it.



// [Reflections End]

// ... 

// [working example]

// let myString6 = "racecar";
// function reverseString6() 
// {    
//     var splitString6 = myString6.split(""); 
//     var reverseArray6 = splitString6.reverse();  
//     var joinArray6 = reverseArray6.join("");     
//     return joinArray6; 
// } 
// reverseString6("");
// console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

// ...

// ...



// console.log("Part 1");
// console.log(" ");

// let myString = "This is not a palindrome";


// // console.log(myString);

// function reverseString() {
    
//     var splitString = myString.split(""); 

 

//     var reverseArray = splitString.reverse(); 
 
//     var joinArray = reverseArray.join(""); 
    
    
//     return joinArray; 
// }
 
// reverseString("");

// console.log(reverseString());

// console.log(" ");
// console.log("Part 2");
// console.log(" ");

// let myString2 = "but it doesn't really matter anyway.";

// function concatStrings() {
    
//     var twoStrings = myString.concat(", ",myString2); 

 

    
    
//     return twoStrings; 
// }
// concatStrings();

// console.log(concatStrings());

// console.log(" ");
// console.log("Part 3");
// console.log(" ");

// let partThree = concatStrings()

// function vowelSearch() {
    
//     var lowerCaseString = partThree.toLowerCase(myString.concat(", ",myString2));
//     var splitLcs = lowerCaseString.split("")
//     // var findA = splitLcs.replace("a","1")
//     // var findA = splitLcs.find("a")
//     // var findA = splitLcs.find(a)
//     // var findA = splitLcs.find("a")
//     // var findA = splitLcs.filter()
//     return splitLcs; 
// }
// vowelSearch();
// // console.log(vowelSearch());

// let vowelSearchArray = vowelSearch()

// // console.log(vowelSearchArray);

// const newArrayA = vowelSearchArray.filter(function(element) {
//   return element == "a";
// });

// // console.log(newArrayA);

// const newArrayE = vowelSearchArray.filter(function(element) {
//   return element == "e";
// });

// // console.log(newArrayE);

// const newArrayI = vowelSearchArray.filter(function(element) {
//   return element == "i";
// });

// // console.log(newArrayI);

// const newArrayO = vowelSearchArray.filter(function(element) {
//   return element == "o";
// });

// // console.log(newArrayO);

// const newArrayU = vowelSearchArray.filter(function(element) {
//   return element == "u";
// });

// // console.log(newArrayU);

// // let myArray13 = ["a", "b", "c", "d", "e", "f", "a","e","e",];
// // const newArray21 = myArray13.filter(function(element) {
// //   return element == "e";

// // });

// // console.log(  newArray21);  

// let allVowels = newArrayA.concat(newArrayE, newArrayI, newArrayO, newArrayU);

// // console.log(  allVowels)

// let numberOfVowels = allVowels.length;

// console.log(  "Number of Vowels in String = " + numberOfVowels);

// console.log(" ");
// console.log("Part 4");
// console.log(" ");

// let p4String = (  myString + ", " + myString2 + " Number of Vowels in String = " + numberOfVowels);

// // console.log(p4String);

// function vowelSwap() {
    
//     var aForOh = p4String.replace(/a/g, "o"); 

 

    
    
//     return aForOh; 
// }
// vowelSwap();

// console.log(vowelSwap());

// console.log(" ");
// console.log("Part 5");
// console.log(" ");

// let p5sTring = vowelSwap();

// function noSpace() {
    
//     var iGottaBlankSpaceBaby = p5sTring.replace(/ /g, ""); 

 

    
    
//     return iGottaBlankSpaceBaby; 
// }
// noSpace();

// console.log(noSpace());

// console.log(" ");
// console.log("Part 6");
// console.log(" ");

// let myString6 = "racecar";


// // console.log(myString);

// function reverseString6() {
    
//     var splitString6 = myString6.split(""); 

 

//     var reverseArray6 = splitString6.reverse(); 
 
//     var joinArray6 = reverseArray6.join(""); 
    
    
//     return joinArray6; 
// }
 
// reverseString6("");

// console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

// console.log(" ");
// console.log("Part 7");
// console.log(" ");

// let myString7 = "appkhgkgkjhghjkgkjhbkhjb8les";

// function isStringAlphaNumeric() {

//     var toLowerCase7 = myString7.toLowerCase("");
//     var splitString7 = toLowerCase7.split(""); 
//     var trueFalse7 = splitString7.includes("q","w","e","r","t","y","u","i","o","p","a","s","d","f","g","h","j","k","l","z","x","c","v","b","n","m","1","2","3","4","5","6","7","8","9","0",);
    

    
    
//     return trueFalse7 ; 
// }

// console.log(isStringAlphaNumeric());

// ...

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map

// ...

// [Good Lord. This is such a minor victory point]

// var num = 123456;

// var digits = num.toString().split('').reverse();
// var realDigits = digits.map(Number)
// console.log(realDigits);

// var joinRealDigits = realDigits.join('');
// console.log(joinRealDigits);

// ...



// var num = 123456;
// var digits = num.toString().split('').reverse().join('');
// var realDigits = digits.map(Number)
// console.log(realDigits);


// ...



// var Number = 123456;
// var digits = Number.toString().split('').reverse();
// var realDigits = digits.map(Number);
// console.log(realDigits);




//     {Number(String(x).split('').reverse().join(''))        }




// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString




// var num = 123456;
// var digits = num.toString().split('').reverse().join('');
// var realDigits = digits.map(Number)
// console.log(realDigits);




// var num = 123456;
// var digits = num.toString().split('').reverse();
// var realDigits = digits.map(Number)
// console.log(realDigits);



// var num = 123456;
// var digits = num.toString().split(' ');
// var realDigits = digits.map(Number);
// console.log(realDigits);



// var num = 123456;
// var digits = num.toString().split('');
// var realDigits = digits.map(Number)
// console.log(realDigits);




// Number(String(x).split('')



// .join('')



// )



// file:///C:/Users/KLYam/OneDrive/Documents/GitHub/miscellaneous/other/project13/LeetCode/console.html

// https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_split6

// https://www.w3schools.com/jsref/jsref_split.asp




// var num = 123456;
// var digits = num.toString().split('');
// var realDigits = digits.map(Number)
// console.log(realDigits);




// let text = 121;
// const chars = text.split("");
// console.log(chars);




















// Number(String(x).split('').reverse().join(''))

// let text = "121";
// const myArray = text.split(" ");
// console.log(myArray);





// let x = 121;

// var number = x;
// const myArray = number.split(" ");
// console.log(myArray);



// let x = 121;

// let text = x;
// const myArray = text.split(" ");
// console.log(myArray);






// let x = 121;

// console.log(x);

// let text = x;
// const myArray = text.split(" ");

// console.log(myArray);

// <!DOCTYPE html>
// <html>
// <body>

// <h1>JavaScript Strings</h1>
// <h2>The split() Method</h2>

// <p>split() splits a string into an array of substrings, and returns the array:</p>

// <p id="demo"></p>

// <script>
// let text = "How are you doing today?";
// const myArray = text.split(" ");

// document.getElementById("demo").innerHTML = myArray; 
// </script>

// </body>
// </html>








// let x = 121;

// console.log(x);

// var isPalindrome = function(x) {

//     var palindromeTester = Number(String(x).split('').reverse().join(''))

//     if (result == x){
//         return true
//     } else {
//         return false
//     }
    
// };

// console.log(isPalindrome);


// [End]

// let palindromeTester

// var isPalindrome = function(x) {

//     var palindromeTester = Number(String(x).split('').reverse().join(''))

//     if (result == x){
//         return true
//     } else {
//         return false
//     }
    
// };

// console.log(palindromeTester);






// [Notes]

// Intro to Variables
// Variables are used in programming to store and manipulate data. In JavaScript, there are three different keywords used for declaring variables: var, let, and const. The main difference between these is something called “scope” which we will cover later.
// var:
// The var keyword is used to declare a variable globally or locally in a function. Variables declared with var are function-scoped, meaning they are only accessible within the function in which they are declared or in the global scope if they are declared outside a function
// let:
// The let keyword is used to declare a block-scoped variable. This means that variables declared with let are only accessible within the block they are declared in, including any nested blocks.
// const:
// The const keyword is used to declare a block-scoped variable that cannot be reassigned. This means that once a variable is declared with const, its value cannot be changed. However, note that the value of an object or an array declared with const can be modified, but the variable cannot be reassigned to a different value.
// 💡 PRO TIP: The var keyword, though it is still valid, is an older way of declaring variables. Almost all modern JavaScript will use either let or const!
// When deciding between let and const, think about whether the value of the variable should be allowed to change or not. If it should not be changed, use const; otherwise, use let.
// Next, let’s talk briefly about naming conventions. This applies to naming both variables and functions, when the name given is made up of several words. The most common convention in JavaScript is to use what is called camel case. This means that the first letter of the first word in the name is lowercase, while in each subsequent word in the name the first letter is uppercase. Let’s look at an example to illustrate this:
// mySuperAwesomeVariableName
// While this example may be a bit over the top, it illustrates the point. The reason why this is the most commonly used naming convention is because it helps greatly with code readability.
// With that in mind, let’s move on to another important point – namely, the difference between declaring a variable and initializing a variable. Declaring a variable means simply creating a variable (e.g. - let myVariable), while initializing a variable means giving it an initial value. With let you can declare a variable without initializing it; with const, however, you MUST also give it an initial value.
// Let’s look at some examples of declaring variables and constants in JavaScript:





// let x = 10;
// x += 5; // equivalent to x = x + 5;

// console.log(x); // output: 15


// let y = 20;
// y -= 10; // equivalent to y = y - 10;

// console.log(y); // output: 10

// let num1 = 10;
// let num2 = 5;

// let additionExample = num1 + num2;

// console.log(additionExample); // Output: 15

// function logMessage() {
//   console.log("Hello, world!");
// }


// setInterval(logMessage, 1000);

// const arr1 = [1, 2, 3];
// const arr2 = [4, 5, 6];
// const combinedArr = [...arr1, ...arr2];
// console.log(combinedArr); // Output: [1, 2, 3, 4, 5, 6]

// [End]

// var x = 121
// var isPalindrome = function(x) {

//     var result = Number(String(x).split('').reverse().join(''))

//     if (result == x){
//         return true
//     } else {
//         return false
//     }

// };

// console.log(isPalindrome);

// if (x == isPalindrome) {
//   console.log("This is a palindrome.");
// } else {
//   console.log("This is not a palindrome.");
// }

// console.log(isPalindrome);    

// [Start]

// var x = 1215
// var isPalindrome = function(palindromeTester) {


//  var reverse = 0;
//     var copy = x;

//     while (copy > 0) {
//       const digit = copy % 10;
//       reverse = reverse * 10 + digit;
//       copy = ~~(copy / 10);
//     }

//     return reverse == x;
// }

// console.log(isPalindrome);

// if (x == isPalindrome) {
//   console.log("This is a palindrome.");
// } else {
//   console.log("This is not a palindrome.");
// }

// [End]

// [Reflections Start]

// I think that I'm slowly figuring this out.

// ...

// What happened. well I found that there is a hide button on Slack, and I can basically
// tune out anyone who I really don't need to waste time interacting with. It's useless to 
// tell me that I don't know something, after I've clearly stated that I don't know something,
// and that I'm seeking information about how to resolve it. Useless. Aggravating.

// Anyway. I looked at other LeetCode solutions in the solutions section, and they work in LeetCode, but 
// I don't know how to make them work in a regular environment, and so, like. learning things in LeetCode
// are going to be useless unless I can figure out how to use these lessons in a regular environment.

// I can't believe it's Saturday already.

// [Reflections Start]

// [Notes from Course Material Start]

// Comparison Operators

// Comparison operators are used in JavaScript to compare values and return a Boolean value (true or false). 

// There are several comparison operators available in JavaScript:

// Equal to (==): Returns true if two values are equal, regardless of their data types.
// Not equal to (!=): Returns true if two values are not equal.
// Strict equal to (===): Returns true if two values are equal and have the same data type.
// Strict not equal to (!==): Returns true if two values are not equal or do not have the same data type.
// Greater than (>): Returns true if one value is greater than another.
// Less than (<): Returns true if one value is less than another.
// Greater than or equal to (>=): Returns true if one value is greater than or equal to another.
// Less than or equal to (<=): Returns true if one value is less than or equal to another.

// [Notes from Course Material End]

// [LeetCode Reflections Start]

// [References:]   [https://firefox-source-docs.mozilla.org/devtools-user/web_console/index.html]
//                 [https://stackoverflow.com/questions/20256760/javascript-console-log-to-html]
//                 [https://en.wikipedia.org/wiki/Major-General%27s_Song]
//                 [https://stackoverflow.com/questions/20256760/javascript-console-log-to-html]

// One of the issues that I'm having with JavaScript is that I can't really see what 
// I'm doing.

// ...

// I really don't know how to work with this LeetCode stuff.
// I started off with this one problem, but, I had to shift to a different
// one.

// I'm shifting to the palindrome question.

// [LeetCode Reflections End]

// [Thread Start]

// Kenneth Larot Yamat

// This company reached out to me on LinkedIn, but when I looked at 
// their website it appeared rife with irregularities - https://thinkfish.co - 
// but it got me thinking about pitching a business idea and seeking funding, but 
// I really don't know much about that process other than what I've seen on 
// SharkTank and a college elective that I took 14 years ago.

// Classmate

// The fact that you referenced a staged reality show and a singular 
// class you took 14 yrs ago as your know-how. I would suggest that you 
// stick with this and make it work. I promise pitching and gathering 
// funding for an on-the-whim idea is absolutely not as simple as TV makes it seem.

// Kenneth Larot Yamat

// My business idea would either be a software program or 
// a website, or some kind of mobile app. 

// [Thread End]

// Kenneth Larot Yamat [Reflections Start]

// I need to stay away from people like this. I already noted that I don't really 
// have experience pitching business ideas and seeking funding, but she seems to 
// flip it around as though I was listing it as a kind of extensive expertise or something. 

// There isn't really an option to block people in slack, but, people who are cynical in 
// a way that really isn't helpful, like, I don't know what to do about that.

// Saying that it's not easy is something that I'm already aware of, and telling me that 
// I don't know how to do it is something that I'm also already aware of. I was posting
// it to see if anyone had any ideas about how the process worked. 

// I don't need someone to tell me I don't know how to do something. I already know that.
// The other thing is that she seems to put forward the idea that starting a business, and 
// attending class are in some way mutually exclusive, and I try to point out that the two are 
// actually concurrent.

// I don't know what it is, but I always come across this:
// I ask for help, and the response is usually: 
// You don't know what you're doing.
// and.

// I'm just thinking: well that couldn't be more obvious, if 
// I knew what I was doing, I wouldn't 
// be asking for help. There was another one of these situations.

// Kenneth Larot Yamat [Reflections End]

// [Thread Start]

// Kenneth Larot Yamat

// A role that I applied for stated: Experience in front-end 
// frameworks like Angular, React, Backbone, and JQuery
// I listed bootstrap as a front-end framework that I have 
// experience with, but do these other frameworks work in 
// essentially the same way as bootstrap?

// Classmate

// no, bootstrap is just for design, and don't list 
// things you don't know in resume just to pass ATS

// [Thread End]

// Kenneth Larot Yamat [Reflections Start]

// This was another aggravating conversation. This person insunuates that I plan on lying on my resume. 
// The other thing is that I think of front-end as referring to design, rather than function. This was 
// another person I wanted to block. I already deal with a lot of useless stuff as it is. right. I don't 
// need more useless conversations, especially ones that aggravate me.

// The other thing is: These might not be real people, they might just be cynical remark chatbot or 
// negative energy chatbots or cynical remark text generators. so I shouldn't pay too much attention
// to these kind of comments.

// Are you a cynical remark text generator? My business idea would either 
// be a software program or a website, or some kind of mobile app.

// Are you a cynical remark text generator? 

// I changed that. I don't need to be as toxic as other people.

// Kenneth Larot Yamat [Reflections End]

/* <!-- <script src="https://kennethlarotyamat.github.io/miscellaneous/index.js"></script> -->

<!-- <script src="https://[username].github.io/[repository]/[filename].js"></script> -->

<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/index.css"> -->
<!-- <script src="https://kennethlarotyamat.github.io/miscellaneous/index.css"></script> -->

<!-- <script src="https://kennethlarotyamat.github.io/miscellaneous/index.js"></script> -->

<!-- <script src="https://[username].github.io/[repository]/[filename].js"></script> -->
 */

// <!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/index.css"> -->
// <!-- <script src="https://kennethlarotyamat.github.io/miscellaneous/index.css"></script> -->

// <!-- <script src="https://kennethlarotyamat.github.io/miscellaneous/index.js"></script> -->

// <!-- <script src="https://[username].github.io/[repository]/[filename].js"></script> -->

/* Chestnut + Hazel's Miscellaneous Repository README.md

...

"Everything I had done has to be done 
over; I was on the wrong track entirely, 
and after working hard most of that time: 
I'm still only at the beginning." 

- Gustave Flaubert

...

This repository was created as a requirement for
completing project 13. I honestly did not want to
create a whole new repository, but, here we are.

...

William Carlos Williams

"The Young Housewife"  (1916)

At ten A.M. the young housewife
moves about in negligee behind
the wooden walls of her husband's house.
I pass solitary in my car.

Then again she comes to the curb
to call the ice-man, fish-man, and stands
shy, uncorseted, tucking in
stray ends of hair, and I compare her
to a fallen leaf.

The noiseless wheels of my car
rush with a crackling sound over
dried leaves as I bow and pass smiling.

...

WILLIAM CARLOS WILLIAMS

"The Red Wheelbarrow" (1938)

so much depends
upon

a red wheel
barrow

glazed with rain
water

beside the white
chickens

...

William Carlos Williams

"This Is Just To Say" (1962)

I have eaten
the plums
that were in
the icebox

and which
you were probably
saving
for breakfast

Forgive me
they were delicious
so sweet
and so cold

...

Kenneth Larot Yamat

"This Is Just To Say Something About The Young Housewife" (2023)

I totally ate all of the  so many    fried turkeys
that were hanging out
by the red wheelbarrow
you know     the one glazed with
soy sauce and beside the 
                      kentucky fried 
                             kung pao chickens
           which 
themselves were drenched in
              tabasco sauce

I request neither forgiveness
nor do I intend to apologize for
          my actions 

because 

I spent several hours
of quality time
with a certain young housewife

                    who

braless and dressed in negligee 

          and 

whose wild hair suggested
she spent even more additional
even higher quality time with
both the ice man
and the fish man

       either sequentially 
               or 
              simultaneously 
                     neither would surprise me

left me    breathless    exhausted
as well as      famished

I thought I gave a good
account of myself

but then along came 
          the milkman
and    she             still
   had enough energy 
       for 
    round four

I was there
I saw it all

... */

Cleaning more of it.

...   

I'm still having a hard time making the pages deploy, I deleted the other branches, but, I still have no idea what's going on here.

...

/* <!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> --> */

...

<!-- https://kennethlarotyamat.github.io/javascript/project14.js -->

<!-- [ SWAP ] Note To Self: Swap out local reference to remote reference one project is completed -->
<!-- it works -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!--[Remote Reference] <script src="https://kennethlarotyamat.github.io/javascript/project14.js"></script> -->

...

<!-- [ SWAP ] Note To Self: Swap out local reference to remote reference one project is completed -->
<!-- it works -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\other\project014\project14.html -->
<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> -->
<!-- ..\css\project14.css -->

...

for whatever reason, my pages aren't deploying right away, so I'm going to have to use local references until then,
that way I can work on my projects.

...

    <!-- <iframe  src=".\options-pricing-calculator-project-13-part-2\src\index.html" 
style=" margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh;  width:50%; height: auto; aspect-ratio: 50/62; " 
scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
allowfullscreen >
</iframe>  -->

...

3
crbug/1173575, non-JS module files deprecated.
(index)꞉6583:22:6587
2
crbug/1173575, non-JS module files deprecated.
(index)꞉6583:22:6587
5
crbug/1173575, non-JS module files deprecated.
(index)꞉6583:22:6587
crbug/1173575, non-JS module files deprecated.
(index)꞉6583:22:6587
3
crbug/1173575, non-JS module files deprecated.

...

/* .divchestnutandhazellandingpageheaderbutton 
{
  font-size: 4vw;
      text-align: center;
    vertical-align: middle;
} */

...

/* .divchestnutandhazellandingpageheaderbutton 
{
  font-size: 4vw;
      text-align: center;
    vertical-align: middle;
} */

...

/* #centerheadertextbutton 
{
    text-align: center;
    vertical-align: middle;
    
} */

...

/* #submitinformationcontactbutton 
{
  border-style: outset;
  border-width: thick;
  padding: 1px 1px;
  width: auto;
  border-color: silver;
}

#submitinformationcontactbutton:hover 
{
  border-style: inset;
  border-width: thick;
  padding: 1px 1px;
  width: auto;
  border-color: silver;
} */

...

 

test deployment 11012023 0200

...

// [ Modal Auto-Play Shutoff ] [ Removed While Not In Use ]
// $(function(){
//     $("body").on('hidden.bs.modal', function (e) {
//       var $iframes = $(e.target).find("iframe");
//       $iframes.each(function(index, iframe){
//         $(iframe).attr("src", $(iframe).attr("src"));
//       });
//     });
//   });  
// $(function() {
//   "use strict";

...
[ Modal Auto-Play Shutoff ] [ Removed While Not In Use ]
// $(function(){
//     $("body").on('hidden.bs.modal', function (e) {
//       var $iframes = $(e.target).find("iframe");
//       $iframes.each(function(index, iframe){
//         $(iframe).attr("src", $(iframe).attr("src"));
//       });
//     });
//   });

...

// [ Modal Auto-Play Shutoff ] [ Removed While Not In Use ]

// $(function(){
//     $("body").on('hidden.bs.modal', function (e) {
//       var $iframes = $(e.target).find("iframe");
//       $iframes.each(function(index, iframe){
//         $(iframe).attr("src", $(iframe).attr("src"));
//       });
//     });
//   });

...

I'm going to reorganize my entire repository. This is going to be a headache. and a nightmare.

...

<!-- https://kennethlarotyamat.github.io/javascript/project14.js -->
<!-- [ SWAP ] Note To Self: Swap out local reference to remote reference one project is completed -->
<!-- it works -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!--[Remote Reference] <script src="https://kennethlarotyamat.github.io/javascript/project14.js"></script> -->
<!-- [ SWAP ] Note To Self: Swap out local reference to remote reference one project is completed -->
<!-- it works -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\other\project014\project14.html -->
<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> -->
<!-- ..\css\project14.css -->
/* <!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!--[Remote Reference] <script src="https://kennethlarotyamat.github.io/javascript/project14.js"></script> --> */
/* <!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> --> */

...

So here it is. I have to bring the quiz project, project 12 into this, both as a json 
and i have to make responses asynchronous in a way that makes the text appear on screen
like someone is typing them out.

this is supposed to look like a dating simulator.

oct28project14 oct28

...

I figured out what the deployment issue was, the issue was that I had. and I already had to 
deal with this issue before, the issue was that I had a respository within a directory within my 
main repository, so, for whatever reason, GitHub won't deploy a Repository that has a repository 
inside of it. It was my collaborator Chris's repository. anyway. I had to delete it. I reorganized 
a whole bunch of stuff, thinking that the issue was the mountain of folders within folders, but the 
issue was the respository within a repository issue. My guess, and my expectation is that I have a whole 
bunch of broken stuff.

...

after this is all sorted out, this is basically going to be how I organize things going forward. I don't 
really want to have tons of sub folders. it always seems that, if it's not one problem, there is some 
other problem, nothing is ever really solved. I'll either have a whole bunch of folders with sub folders, 
or i'll have a small number of folders, each with a ton of files. this is a headache.


...

C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\sliderproject10style.css
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\sliderproject10index.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\sliderproject10script.js

C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\media\text\project14.txt
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\project14.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\sliderproject10style.css
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js

...

all the paths for project 14 and for the slider project, a copy of project 10, seem to be in order, so I'll start 
putting the slider into the new project. 

<!-- [Project 14 Outline]

Step 1 integrate slider project - project 10
Step 2 integrate original connections - codepen
Step 3 integrate quiz project - project 12
    Create json file for responses
    Create asynchronous function for responses
        make the text appear on the screen the way it does on CHAT GPT
        - make it appear that someone is actually typing responses - 

So here it is. I have to bring the quiz project, project 12 into this, both as a json 
and i have to make responses asynchronous in a way that makes the text appear on screen
like someone is typing them out.

this is supposed to look like a dating simulator.

I want the slider project to make it look like a swipe left swipe right the way it is on dating apps.
this is supposed to be a dating app and dating simulator.   

[Project 14 Outline] -->

...

main section is in focus, this is where I will put the pictures.

...

<!-- https://kennethlarotyamat.github.io/other/project010/project10index.html -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\miscellaneous\other\project13\Part2Calculator\calculatorindex.html -->
<!-- https://kennethlarotyamat.github.io/other/project010/project10index.html -->
<!-- file:///C:/Users/KLYam/OneDrive/Documents/GitHub/miscellaneous/other/project13/Part2Calculator/calculatorindex.html -->
<!-- https://stackoverflow.com/questions/8366957/how-to-center-an-iframe-horizontally -->
<!-- file:///C:/Users/KLYam/OneDrive/Documents/GitHub/kennethlarotyamat.github.io/other/project010/project10index.html -->
<!-- for things to be responsive, measurements kind of all have to be in vh format or percentage formats -->
<iframe src="https://kennethlarotyamat.github.io/other/project010/sl1.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen > </iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/sl2.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/sl3.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/sl4.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/sl5.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/sl6.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/sl7.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/sl8.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>


<iframe src="https://kennethlarotyamat.github.io/miscellaneous/index.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen > </iframe>
<iframe src="https://kennethlarotyamat.github.io/miscellaneous/other/project13/Part2Calculator/calculatorindex.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen > </iframe>


<iframe src="https://kennethlarotyamat.github.io/other/project010/project8pdf.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"  > </iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/project7pdf.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"  > </iframe>
<iframe src="https://kennethlarotyamat.github.io/other/project010/project6pdf.html" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"  > </iframe>
<!-- <b class="subheadercenterheadertextbutton" style="color:#660010;"  >   Landing Page</b> [Removed the word landing page] -->
<!-- <p class=" subheadercenterheadertextbutton"  style="color:#660010;" >+</p> -->

...

[Next Step]

<!-- [Create a series of Jennifer Connely Slides as iframes] [Recycle Content from old Connections Assignment] -->

<!-- 

     <div  class="modal fade modal-xl" id="jenniferconnellymodalexampleModalasdasd" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div style="width: 1000px; height: auto; aspect-ratio: 8.68 / 6.08;" class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="jenniferconnellymodalexampleModalasdasd1">Career Opportunities with Chestnut + Hazel Connections</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <iframe style="width: 970px; height: auto; aspect-ratio: 8.68 / 6.08;"  src="https://www.youtube.com/embed/As3LGNTlPQ0" title="Mr.Kitty • After Dark || Jennifer Connelly • Career Opportunities" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> 


      </div>
    </div>
  </div>
</div>  -->
  
  
<!--   <button data-bs-whatever="sendMessage" class= " btn btn-success float-right " data-bs-toggle="modal" data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send Message</button>

<button data-bs-whatever="sentsendMessage"  class="btn btn-success"  data-bs-toggle="modal" data-bs-target="#messagesentsendmessagesubmodalexampleModalloginsubmodal" >Send</button>









<button data-bs-whatever="LogIn" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModalloginsubmodal">Login</button>



    <div class="modal fade" id="exampleModalloginsubmodal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel12">Login</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Guess what? <br>You're Logged In!
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

      </div>
    </div>
  </div>
</div> -->

...

This isn't going to be that easy.

...

<!--   <a class="mx-3 nav-link" href="#exampleModal868S" data-bs-toggle="modal" data-bs-target="#exampleModal868S">Send Message</a>
  
  
  
 
<div class="modal fade" id="exampleModal868S" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModal868lLabelS">Message Sent!</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">Guess What? <br> YOUR MESSAGE HAS BEEN SENT!
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>   -->

<!-- References: https://www.youtube.com/watch?v=8HmNoxhg7oY -->

...

<!--          <a class="mx-3 nav-link" href="#exampleModal868S" data-bs-toggle="modal" data-bs-target="#exampleModal868S">Send</a> -->
  
  
  
 
<!-- <div class="modal fade" id="exampleModal868S" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModal868lLabelS">Message Sent!</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">Guess What? <br> YOUR MESSAGE HAS BEEN SENT!
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>  -->
        
        
        
        
        
        
        
        
        
        
        
        
        
        
                
                
                
<!--        <a data-bs-whatever="sentMessage" href="#sentmessage686" data-bs-toggle="modal" data-bs-target="#sentmessage686" class="btn btn-success">Send Go somewhere</a>         
        <button data-bs-whatever="sentMessage" href="#sentmessage686" data-bs-whatever="sentMessage" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#sentmessage686">Send</button> 
                <button data-bs-whatever="sentMessage" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#sentmessage686">Login</button>
                
                                  <button data-bs-whatever="sendMessage" class= " btn btn-success float-right " data-bs-toggle="modal" data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send Message</button> -->
        
        
        
        
        

        
        
<!--         <div class="modal fade" id="sentmessage686" tabindex="-1" aria-labelledby="sentmessage686" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="sentmessage686label">Message Sent!</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Guess what? <br> Your Message Has Been Sent!
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

      </div>
    </div>
  </div>
</div> -->
        
        
<!--  <div class="modal fade" id="exampleModal868" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModal868lLabel">About Us</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
You're here because <br> you obviously have an <nobr style="text-decoration: line-through" > unhealthy obsession</nobr><br> <nobr style="font-style: italic; font-weight: bolder;" > type</nobr>  and your type is clearly named: <br> Jennifer Connelly
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>          -->
        
 
        
<!--      <div class="modal fade" id="messagesentsendmodal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel0">Log In</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Guess what? <br>Your message has been sent!
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> 

      </div>
    </div>
  </div>
</div>  </div>   -->
        
        
        
<!--        <div> <div class="modal fade" id="messagesentsendmessagesubmodalexampleModalloginsubmodal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="messagesentsendmessagesubmodalexampleModalloginsubmodalsendmessagesubmodalexampleModalloginsubmodallLabel">Send Message</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <input id="yourMessagesent" name="yourMessage" style="width:100%; height:auto; aspect-ratio: 8.6 / 6.08" type="text">
        
              <div class="modal-footer">
        
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> </div> </div> -->
                
                
        
<!--         <form action="mailto:info@chestnutandhazel.com" target="_blank" method="post"> <input id="yourMessage" name="yourMessage" style="width:100%; height:auto; aspect-ratio: 8.6 / 6.08" type="text">

     
      <div class="modal-footer">
        
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <input   target="_blank" class="btn btn-success" type="submit" value="Send">

        </div></form>   -->

...

<!--                 <button type="button" class="btn btn-success" data-bs-dismiss="modal">Send Message</button> -->

...

This is not going to be easy, here is the thing. I haven't looked at Chestnut + Hazel connections in a while, and it honestly 
feels like something from over a million years ago that I did, right now I'm just clearing out the HTML file to see what it all is 
removing the comments. 

I thought this was going to be easy, like just split up the cards into different individual pages, that probably will take a while to do, 
but I'm still figuring out where to start cutting things up.

...

This is a headache. a nightmare.

...

// can create a new claass and use query selector all in the fucntion use a for each or for each loop use for each and selector all function create branch to try alternative approach
// 09 23 2023 09 40 00
// <!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\chestnutandhazelsgithubadventures.css -->
// <!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
// allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
// <!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
// <!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->
// <!-- [this works]  <link rel="stylesheet" href="https://kennethlarotyamat.github.io/CSS/chestnutandhazelsgithubadventures.css">  -->  

// [Project 14 Outline]

// Step 1 integrate slider project - project 10
// Step 2 integrate original connections - codepen
// Step 3 integrate quiz project - project 12
//     Create json file for responses
//     Create asynchronous function for responses
//         make the text appear on the screen the way it does on CHAT GPT
//         - make it appear that someone is actually typing responses - 

// So here it is. I have to bring the quiz project, project 12 into this, both as a json 
// and i have to make responses asynchronous in a way that makes the text appear on screen
// like someone is typing them out.

// this is supposed to look like a dating simulator.

// I want the slider project to make it look like a swipe left swipe right the way it is on dating apps.
// this is supposed to be a dating app and dating simulator.   

// [Project 14 Outline]

  /* align-items:; */
   /* 09 23 2023 09 40 00 Chestnut + Hazel's Miscellaneous Repository README.md

...

"Everything I had done has to be done 
over; I was on the wrong track entirely, 
and after working hard most of that time: 
I'm still only at the beginning." 

- Gustave Flaubert

...

This repository was created as a requirement for
completing project 13. I honestly did not want to
create a whole new repository, but, here we are.

...

William Carlos Williams

"The Young Housewife"  (1916)

At ten A.M. the young housewife
moves about in negligee behind
the wooden walls of her husband's house.
I pass solitary in my car.

Then again she comes to the curb
to call the ice-man, fish-man, and stands
shy, uncorseted, tucking in
stray ends of hair, and I compare her
to a fallen leaf.

The noiseless wheels of my car
rush with a crackling sound over
dried leaves as I bow and pass smiling.

...

WILLIAM CARLOS WILLIAMS

"The Red Wheelbarrow" (1938)

so much depends
upon

a red wheel
barrow

glazed with rain
water

beside the white
chickens

...

William Carlos Williams

"This Is Just To Say" (1962)

I have eaten
the plums
that were in
the icebox

and which
you were probably
saving
for breakfast

Forgive me
they were delicious
so sweet
and so cold

...

Kenneth Larot Yamat

"This Is Just To Say Something About The Young Housewife" (2023)

I totally ate all of the  so many    fried turkeys
that were hanging out
by the red wheelbarrow
you know     the one glazed with
soy sauce and beside the 
                      kentucky fried 
                             kung pao chickens
           which 
themselves were drenched in
              tabasco sauce

I request neither forgiveness
nor do I intend to apologize for
          my actions 

because 

I spent several hours
of quality time
with a certain young housewife

                    who

braless and dressed in negligee 

          and 

whose wild hair suggested
she spent even more additional
even higher quality time with
both the ice man
and the fish man

       either sequentially 
               or 
              simultaneously 
                     neither would surprise me

left me    breathless    exhausted
as well as      famished

I thought I gave a good
account of myself

but then along came 
          the milkman
and    she             still
   had enough energy 
       for 
    round four

I was there
I saw it all

...*/

  
  /* .panchorlinkhover{    transform: scale(1.08); color: blue;
  text-decoration: none;}   */
  /* transform: scale(1.08); */

  /* transform: scale(1.08); */


/* main {align-items: center;} */

/* body{align-items: center;} */

/* align-items: center; */  

...

[Chestnut + Hazel Connections Starting Point]

[C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\sliderproject10index.html]
[C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\sliderproject10style.css]
[C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\sliderproject10script.js]

[Chestnut + Hazel Slider Starting Point]

C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\p14chconnectionsindex.html

...

[Project 14 Outline]

Step 1 integrate slider project - project 10 [x] [This is done, and it works.]
Step 2 integrate original connections - codepen
Step 3 integrate quiz project - project 12
    Create json file for responses
    Create asynchronous function for responses
        make the text appear on the screen the way it does on CHAT GPT
        - make it appear that someone is actually typing responses - 

So here it is. I have to bring the quiz project, project 12 into this, both as a json 
and i have to make responses asynchronous in a way that makes the text appear on screen
like someone is typing them out.

this is supposed to look like a dating simulator.

I want the slider project to make it look like a swipe left swipe right the way it is on dating apps.
this is supposed to be a dating app and dating simulator.   

[Project 14 Outline]

...

  /* 09 23 2023 09 40 00 Chestnut + Hazel's Miscellaneous Repository README.md

...

"Everything I had done has to be done 
over; I was on the wrong track entirely, 
and after working hard most of that time: 
I'm still only at the beginning." 

- Gustave Flaubert

...

This repository was created as a requirement for
completing project 13. I honestly did not want to
create a whole new repository, but, here we are.

...

William Carlos Williams

"The Young Housewife"  (1916)

At ten A.M. the young housewife
moves about in negligee behind
the wooden walls of her husband's house.
I pass solitary in my car.

Then again she comes to the curb
to call the ice-man, fish-man, and stands
shy, uncorseted, tucking in
stray ends of hair, and I compare her
to a fallen leaf.

The noiseless wheels of my car
rush with a crackling sound over
dried leaves as I bow and pass smiling.

...

WILLIAM CARLOS WILLIAMS

"The Red Wheelbarrow" (1938)

so much depends
upon

a red wheel
barrow

glazed with rain
water

beside the white
chickens

...

William Carlos Williams

"This Is Just To Say" (1962)

I have eaten
the plums
that were in
the icebox

and which
you were probably
saving
for breakfast

Forgive me
they were delicious
so sweet
and so cold

...

Kenneth Larot Yamat

"This Is Just To Say Something About The Young Housewife" (2023)

I totally ate all of the  so many    fried turkeys
that were hanging out
by the red wheelbarrow
you know     the one glazed with
soy sauce and beside the 
                      kentucky fried 
                             kung pao chickens
           which 
themselves were drenched in
              tabasco sauce

I request neither forgiveness
nor do I intend to apologize for
          my actions 

because 

I spent several hours
of quality time
with a certain young housewife

                    who

braless and dressed in negligee 

          and 

whose wild hair suggested
she spent even more additional
even higher quality time with
both the ice man
and the fish man

       either sequentially 
               or 
              simultaneously 
                     neither would surprise me

left me    breathless    exhausted
as well as      famished

I thought I gave a good
account of myself

but then along came 
          the milkman
and    she             still
   had enough energy 
       for 
    round four

I was there
I saw it all

...*/

  
  /* .panchorlinkhover{    transform: scale(1.08); color: blue;
  text-decoration: none;}   */
  /* transform: scale(1.08); */

  /* transform: scale(1.08); */


/* main {align-items: center;} */

/* body{align-items: center;} */

/* align-items: center; */
    /* align-items:; */

...

  /* Chestnut + Hazel's Miscellaneous Repository README.md

...

"Everything I had done has to be done 
over; I was on the wrong track entirely, 
and after working hard most of that time: 
I'm still only at the beginning." 

- Gustave Flaubert

...

This repository was created as a requirement for
completing project 13. I honestly did not want to
create a whole new repository, but, here we are.

...

William Carlos Williams

"The Young Housewife"  (1916)

At ten A.M. the young housewife
moves about in negligee behind
the wooden walls of her husband's house.
I pass solitary in my car.

Then again she comes to the curb
to call the ice-man, fish-man, and stands
shy, uncorseted, tucking in
stray ends of hair, and I compare her
to a fallen leaf.

The noiseless wheels of my car
rush with a crackling sound over
dried leaves as I bow and pass smiling.

...

WILLIAM CARLOS WILLIAMS

"The Red Wheelbarrow" (1938)

so much depends
upon

a red wheel
barrow

glazed with rain
water

beside the white
chickens

...

William Carlos Williams

"This Is Just To Say" (1962)

I have eaten
the plums
that were in
the icebox

and which
you were probably
saving
for breakfast

Forgive me
they were delicious
so sweet
and so cold

...

Kenneth Larot Yamat

"This Is Just To Say Something About The Young Housewife" (2023)

I totally ate all of the  so many    fried turkeys
that were hanging out
by the red wheelbarrow
you know     the one glazed with
soy sauce and beside the 
                      kentucky fried 
                             kung pao chickens
           which 
themselves were drenched in
              tabasco sauce

I request neither forgiveness
nor do I intend to apologize for
          my actions 

because 

I spent several hours
of quality time
with a certain young housewife

                    who

braless and dressed in negligee 

          and 

whose wild hair suggested
she spent even more additional
even higher quality time with
both the ice man
and the fish man 

       either sequentially 
               or 
              simultaneously 
                     neither would surprise me

left me    breathless    exhausted
as well as      famished

I thought I gave a good
account of myself

but then along came 
          the milkman
and    she             still
   had enough energy 
       for 
    round four

I was there
I saw it all

... */

    /* width: 100%; */
    /* width: 100%; */
    /* padding:5%; */

...

/* [Project 14 Outline]

Step 1 integrate slider project - project 10
Step 2 integrate original connections - codepen
Step 3 integrate quiz project - project 12
    Create json file for responses
    Create asynchronous function for responses
        make the text appear on the screen the way it does on CHAT GPT
        - make it appear that someone is actually typing responses - 

So here it is. I have to bring the quiz project, project 12 into this, both as a json 
and i have to make responses asynchronous in a way that makes the text appear on screen
like someone is typing them out.

this is supposed to look like a dating simulator.

I want the slider project to make it look like a swipe left swipe right the way it is on dating apps.
this is supposed to be a dating app and dating simulator.   

[Project 14 Outline] */

...

.headerbutton 
{
  text-decoration: none;
  border-style: outset;
  border-width: thick;
  border-color: silver;
  padding: 6px 6px;
  background-color: white;
}
.headerbutton:hover 
{
  text-decoration: none;
  border-style: inset;
  border-width: thick;
  border-color: silver;
  padding: 6px 6px;
}

...

.headerbutton {
  text-decoration: none;
  border-style: outset;
  border-width: thick;
  border-color: silver;
  padding: 6px 6px;
  background-color: white;
}
.headerbutton:hover {
  text-decoration: none;
  border-style: inset;
  border-width: thick;
  border-color: silver;
  padding: 6px 6px;
}

...

I'm removing stuff from the css and js files to clean this up, it's really hard 
to see what's going on, when there is a lot going on, or when there are a lot of 
things to look at. 

the modal autoplay shutoff function is being kept, even though I'm not really using 
it yet because I might need it later. so it's staying, even though I'm not using it.
there is stuff from the form assignment, as well as the quiz assignment that are still 
in the js file because i do plan on using those later.

...

/*  bodyA.toggleClass("dark-modefields");
footer.toggleClass("dark-modefields");
main.toggleClass("dark-modefields");
aside.toggleClass("dark-modefields");
subheadercenterheadertextbutton.toggleClass("dark-modefields");
header.toggleClass("dark-modefields");
contentouter.toggleClass("dark-mode");

const modeMessage = contentouter.hasClass("dark-mode") ? 

.dark-mode {
background-color: #ffffff;
color:  #000000 ;
transition: all 0.4s ease-in;
}
.dark-modefields {
background-color: #BCC2C2;
color:  #000000 ;
transition: all 0.4s ease-in;
}
.dark-modebsbuttons {
background-color: silver;
border-color: gray;
color:  #000000 ;
transition: all 0.4s ease-in;
}



*/

...

  /* .dark-mode {
    background-color: #ffffff;
    color:  #000000 !important;
    transition: all 0.4s ease-in;
  }
  .dark-modefields {
    background-color: #e0f0f0;
    color:  #000000 !important;
    transition: all 0.4s ease-in;
  }
  .dark-modebsbuttons {
    background-color: #899499;
    border-color: silver;
    color:  #000000 !important;
    transition: all 0.4s ease-in;
  } */

/* Active - Delete Others (Duplicates) */
/* Active - Delete Others (Duplicates) */

...

Header 

<header class="grid-item header "> 
<div></div>
<div> <h2>Chestnut + Hazel Connections</h2> </div> 
<div></div>   
</header>

fixed. I had to add a div to the left, and a div to the right in order to center the text. the 
header text.

...

<!-- Header 

<header class="grid-item header "> 
<div></div>
<div> <h2>Chestnut + Hazel Connections</h2> </div> 
<div></div>   
</header>

fixed. I had to add a div to the left, and a div to the right in order to center the text. the 
header text. -->
<!-- Above is completed - COMPLETE - This is a really slow grind.-->

...

Step 2 integrate original connections - codepen

[Development Notes] [Start]

this is going to take a while. and. I don't even know what the heck to do here. I'm preparing everything else for 
insertion of the cards, from the previous connections page, and reformatting them.

I almost don't even want to take this approach, recycling something I've already done before. Like. I don't really 
want to use content from the Chestnut + Hazel Connections project. because, it would really be easier just to create

something new. I think. I really don't know. I get the feeling that it would be easier to create whole new stuff.

<!-- [Convert to Absolute references] [https://kennethlarotyamat.github.io/css/project14.css] 
    [C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css] -->

<!-- [Absolute] [https://kennethlarotyamat.github.io/css/project14.css]  -->
<!-- [Local]    [C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css] -->

<!-- [Absolute] [https://kennethlarotyamat.github.io/css/project14.css]  -->
<!-- [Local]    [C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css] -->
<!-- 11012023 0604 - so i had to rename my directories - things seem to be case sensitive. -->
<!-- [Absolute] [https://kennethlarotyamat.github.io/css/project14.css]  -->
<!-- [Local]    [C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css] -->
<!-- 11012023 0604 - so i had to rename my directories - things seem to be case sensitive. -->

This change should work. it was kind of a headache.
<!-- Above is completed - COMPLETE - This is a really slow grind. headings work -->
<!-- <!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css --> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io\CSS\project14.css"> -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\project14.css -->
<!-- [Convert to Absolute references] -->
<!-- [Convert to Absolute references] -->  C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js

what a headache.

<!-- Below is completed - COMPLETE - This is a really slow grind. Toggle / Swipe buttons are functional -->

I don't have to do anything else with the toggle / swipe left and right buttons, they work.

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0001.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0002.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0003.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0004.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0005.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0006.html  -->

<!-- 
[https://www.thewebmaster.com/html/attributes/allow/] 
[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe] 
[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe]
[https://stackoverflow.com/questions/59080951/how-use-iframe-allow-attribute]
[https://www.w3schools.com/tags/att_iframe_sandbox.asp]
-->

<!-- [Create a series of Jennifer Connely Slides as iframes] [Recycle Content from old Connections Assignment] -->


<!-- [This is going to take an eternity]
[Convert to Absolute references]
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0001.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0002.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0003.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0004.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0005.html
C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\jcs0006.html 
-->

<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/CSS/project14.css"> -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\p14chconnectionsdistindex.js -->

<!-- I'm going to take a really long shower I haven't shaved in forever -->
<!-- Chestnut + Hazel Connections really was a very very early project. There is almost no css or js, except what i needed to shut off the modal -->
<!-- 
<link rel="icon" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhis5UXOyPLEmBDmRjOHERNBK5CSCBwelHPiOaPwzn903vmcdjBQ_QFy9t4b5N-WNQaxgDTKjK4l7VsbpzXJ9Y82q7MJrdk8c3xq3Nty_TvvAAK1SglaLV9c3f4alOXkW8tYJEZ50WBzNW2tWXdj-ssJLN3HNPhqw0A1DQMNdwJu0aNGArbOUZ3nyvXO-A/s320/Chestnut%20+%20Hazel%20%200123%20(12)%2000%20002%20048.png">
[working favicon] -->

<!-- [Create a series of Jennifer Connely Slides as iframes] [Recycle Content from old Connections Assignment] -->
<!-- on of the issues here is that, in order for this to work, the iframes in the slider also need to work, they need to function
at least, that's the way I see it, I'm developing a contengincy in the even that this approach doesn't work. but, i really want the iframes
inside of the slider to be. the iframes inside of the courosel to work. -->

<!-- 
[https://www.youtube.com/watch?v=Lgs9QUtWc3M] 
I don't know why I was thinking about this song. 
It's where she says: 
"Talk to Me" over and over again. 

[https://www.youtube.com/watch?v=Vn7o-SfmdLo]
[https://www.youtube.com/watch?v=fztSWlnSl20]
[https://www.youtube.com/watch?v=Dn9WTTVj7ag]
"Fire of my loins" is from Nabakov
-->

/* https://en.wikipedia.org/wiki/Shades_of_pink */
/* .tryingtofixthis{width: 100%;padding: 5%;} */

[https://en.wikipedia.org/wiki/Shades_of_pink]

[Development Notes] [End]

...

[Development Notes] [Start]

I'm hungry right now. I could eat a million hot dogs. I don't know if 
I should go out to the buffet or 
if I should just go to the gas station and get a few hot dogs. I'm really 
hungry.

Did I complete step 2?

I did not, not yet. 

I need to isolate one jennifer connelly card, and then that's the starting point. well, the starting 
point of this continued journey. 

<!-- /* [Development Notes] [Start]

I'm hungry right now. I could eat a million hot dogs. I don't know if 
I should go out to the buffet or 
if I should just go to the gas station and get a few hot dogs. I'm really 
hungry.

Did I complete step 2?

I did not, not yet. 

I need to isolate one jennifer connelly card, and then that's the starting point. well, the starting 
point of this continued journey. 

[Development Notes] [End] */ -->

[Development Notes] [End]

<!-- 
[Create a series of Jennifer Connely Slides as iframes] 
[Recycle Content from old Connections Assignment] 
-->

<!-- 
on of the issues here is that, in order for this to work, the iframes in the slider also need to work, they need to function
at least, that's the way I see it, I'm developing a contengincy in the even that this approach doesn't work. but, i really want the iframes
inside of the slider to be. the iframes inside of the courosel to work. 
-->

<!-- only one of the iframes in the carousel ever actually works, and i can't figure out why. so. I'm commenting out all the other 
i frames. for now. -->




/* [Development Notes] [Start]

I'm hungry right now. I could eat a million hot dogs. I don't know if 
I should go out to the buffet or 
if I should just go to the gas station and get a few hot dogs. I'm really 
hungry.

Did I complete step 2?

I did not, not yet. 

I need to isolate one jennifer connelly card, and then that's the starting point. well, the starting 
point of this continued journey. 

[Development Notes] [End] */

/* [Development Notes] [Start]

I'm hungry right now. I could eat a million hot dogs. I don't know if 
I should go out to the buffet or 
if I should just go to the gas station and get a few hot dogs. I'm really 
hungry.

Did I complete step 2?

I did not, not yet. 

I need to isolate one jennifer connelly card, and then that's the starting point. well, the starting 
point of this continued journey. 

[Development Notes] [End] */

    <!-- <iframe src="https://kennethlarotyamat.github.io/html/p14chconnectionsindex.html"
        style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowfullscreen>
    </iframe> -->

<!-- oh my god. this is just a modal. it's not even the whole card for Josephine -->

    <!-- <div class="modal fade modal-xl" id="GoSomewherejosephine" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div style="width: 1000px; height: auto; aspect-ratio: 8.68 / 6.08;" class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="GoSomewherejosephinelabel">
            Go Somewhere with Joséphine McClellan
          </h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <iframe style="width: 970px; height: auto; aspect-ratio: 8.68 / 6.08;"
            src="https://en.wikipedia.org/wiki/Career_Opportunities_(film)"
            title="St Louis, MO Jennifer Connelly • Career Opportunities" frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            allowfullscreen></iframe>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div> -->
<!-- <div class="container-fluid mt-5">
    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhW20VfV22AYtyCzhKHLIbg6tRNMXkWt15vkwKpSl99Ld-Co9HudnJ3LgeAthX2tjqwGCX95xoSAuoPogx9zYrTTIDl0anf2iggzelRM4azKneuWERfLCWRmBZ305yvx5pX-df6pBo6MERd8HpI9Z9MNQ_4v47d8qShxjqqRfkH1O7iIm3aqMD8vcJQlac/s320/square%20Screenshot%202023-08-18%20033521.png"
                    class="card-img-top" alt="Sample Image">
                <div class="card-body">
                    <h5 class="card-title">Joséphine McClellan</h5>
                    <p class="card-text">
                        Life can be cruel if you're a dreamer
                        I just wanna have some fun <br> Don't tell me what can't be done</p>
                    <a data-bs-toggle="modal" data-bs-target="#GoSomewherejosephine" class="btn btn-primary">Go
                        somewhere</a>
                    <nobr class="float-right">



                        <button data-bs-whatever="sendMessage" class=" btn btn-success float-right "
                            data-bs-toggle="modal" data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send
                            Message</button>
                    </nobr>
                </div>

            </div>
        </div>

        <div class="modal fade" id="sendmessagesubmodalexampleModalloginsubmodal" tabindex="-1"
            aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="sendmessagesubmodalexampleModalloginsubmodallLabel">Send
                            Message</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input id="yourMessage" name="yourMessage"
                            style="width:100%; height:auto; aspect-ratio: 8.6 / 6.08" type="text">

                        <div class="modal-footer">

                            <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Close</button>

                            <a type="button" class="btn btn-success" data-bs-toggle="modal"
                                data-bs-target="#exampleModal868S">Send</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> -->

<!-- div class="container-fluid mt-5">
    <div class="row">

        <div class="col-md-4 mb-4">
          <div class="card">
            <img
              src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhW20VfV22AYtyCzhKHLIbg6tRNMXkWt15vkwKpSl99Ld-Co9HudnJ3LgeAthX2tjqwGCX95xoSAuoPogx9zYrTTIDl0anf2iggzelRM4azKneuWERfLCWRmBZ305yvx5pX-df6pBo6MERd8HpI9Z9MNQ_4v47d8qShxjqqRfkH1O7iIm3aqMD8vcJQlac/s320/square%20Screenshot%202023-08-18%20033521.png"
              class="card-img-top" alt="Sample Image">
            <div class="card-body">
              <h5 class="card-title">Joséphine McClellan</h5>
              <p class="card-text">
                Life can be cruel if you're a dreamer
                I just wanna have some fun <br> Don't tell me what can't be done</p>
              <a data-bs-toggle="modal" data-bs-target="#GoSomewherejosephine" class="btn btn-primary">Go somewhere</a>
              <nobr class="float-right">
        
        
        
                <button data-bs-whatever="sendMessage" class=" btn btn-success float-right " data-bs-toggle="modal"
                  data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send Message</button>
              </nobr>
            </div>
        
          </div>
        </div>
        
        <div class="modal fade" id="sendmessagesubmodalexampleModalloginsubmodal" tabindex="-1"
          aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h1 class="modal-title fs-5" id="sendmessagesubmodalexampleModalloginsubmodallLabel">Send Message</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <input id="yourMessage" name="yourMessage" style="width:100%; height:auto; aspect-ratio: 8.6 / 6.08"
                  type="text">
        
                <div class="modal-footer">
        
                  <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Close</button>
        
                  <a type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#exampleModal868S">Send</a>
                </div>
        
        
        
        
        
        
        

         
        
        
      </div>
    </div>
  </div>
</div>  
      
      
      
      
        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLs_jIX1QB_n8gjb9Ir4ILnFMKnKb71VPvVjWRBzyq6ozxDqaKheMoorq2r1ThZuti2TMhJ7b_jwbb9cX2z-CYBvtvOFYX49b630vs1DOvC4KXEBe50CciiP8QQ6PhFRQOqbuSeRt2z5xIAwkheBdGtN5AD4nqmAkPaVtBnO-wuHMOOJRTfOdss6wBjm8/s320/square%20Screenshot%202023-08-18%20044738.png" class="card-img-top" alt="Sample Image">
                <div class="card-body">
                    <h5 class="card-title">Marion Silver</h5>
                    <p class="card-text">
 You know you like it but it drives you insane <br>
You know you like it but it drives you insane</p>
                    <a data-bs-toggle="modal" data-bs-target="#readmoremarion" class="btn btn-primary">Read More</a>
                  <nobr class="float-right">  <button data-bs-whatever="sendMessage" class= " btn btn-success float-right " data-bs-toggle="modal" data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send Message</button></nobr>
                </div>
            </div>
        </div>
        
        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjbVmJYr861zvMG5zdLfm5XA9KcZTrYXMEdSdLFj9Kp6FtWS6tyfsruP7GP8yCtn8IdMnfhqVVXqKAfWjzr7M7dUCg4mHk7B4EymlK1lBrMFBgxWCMC55sDqKTq0Gkxl0sxs6aitOmaG5UhYk-nfY8I_yejw_pE7ZGmVLpa4bP_tG5nbOXx0a15ACUxdqo/s320/Square%20Screenshot%202023-08-18%20045215.png" class="card-img-top" alt="Sample Image">
                <div class="card-body">
                    <h5 class="card-title">Alicia Nash</h5>
                    <p class="card-text">You know you like it but you're scared of the shame <br>

You know you like it but it drives you insane</p>
                    <a data-bs-toggle="modal" data-bs-target="#alicianash" class="btn btn-primary">Discover</a><nobr class="float-right">  <button data-bs-whatever="sendMessage" class= " btn btn-success float-right " data-bs-toggle="modal" data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send Message</button></nobr>
                </div>
            </div>
        </div>
    </div>
</div> -->

<!-- I didn't have bootstrap active. -->
<!-- This is close. I'm almost there. -->
<!-- <div class="container-fluid mt-5">
    <div class="row">

        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhW20VfV22AYtyCzhKHLIbg6tRNMXkWt15vkwKpSl99Ld-Co9HudnJ3LgeAthX2tjqwGCX95xoSAuoPogx9zYrTTIDl0anf2iggzelRM4azKneuWERfLCWRmBZ305yvx5pX-df6pBo6MERd8HpI9Z9MNQ_4v47d8qShxjqqRfkH1O7iIm3aqMD8vcJQlac/s320/square%20Screenshot%202023-08-18%20033521.png"
                    class="card-img-top" alt="Sample Image">
                <div class="card-body">
                    <h5 class="card-title">Joséphine McClellan</h5>
                    <p class="card-text">
                        Life can be cruel if you're a dreamer
                        I just wanna have some fun <br> Don't tell me what can't be done</p>
                    <a data-bs-toggle="modal" data-bs-target="#GoSomewherejosephine" class="btn btn-primary">Go
                        somewhere</a>
                    <nobr class="float-right">



                        <button data-bs-whatever="sendMessage" class=" btn btn-success float-right "
                            data-bs-toggle="modal" data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send
                            Message</button>
                    </nobr>
                </div>

            </div>
        </div>

        <div class="modal fade" id="sendmessagesubmodalexampleModalloginsubmodal" tabindex="-1"
            aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="sendmessagesubmodalexampleModalloginsubmodallLabel">Send
                            Message</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input id="yourMessage" name="yourMessage"
                            style="width:100%; height:auto; aspect-ratio: 8.6 / 6.08" type="text">

                        <div class="modal-footer">

                            <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Close</button>

                            <a type="button" class="btn btn-success" data-bs-toggle="modal"
                                data-bs-target="#exampleModal868S">Send</a>
                        </div>











                    </div>
                </div>
            </div>
        </div>




        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLs_jIX1QB_n8gjb9Ir4ILnFMKnKb71VPvVjWRBzyq6ozxDqaKheMoorq2r1ThZuti2TMhJ7b_jwbb9cX2z-CYBvtvOFYX49b630vs1DOvC4KXEBe50CciiP8QQ6PhFRQOqbuSeRt2z5xIAwkheBdGtN5AD4nqmAkPaVtBnO-wuHMOOJRTfOdss6wBjm8/s320/square%20Screenshot%202023-08-18%20044738.png"
                    class="card-img-top" alt="Sample Image">
                <div class="card-body">
                    <h5 class="card-title">Marion Silver</h5>
                    <p class="card-text">
                        You know you like it but it drives you insane <br>
                        You know you like it but it drives you insane</p>
                    <a data-bs-toggle="modal" data-bs-target="#readmoremarion" class="btn btn-primary">Read More</a>
                    <nobr class="float-right"> <button data-bs-whatever="sendMessage"
                            class=" btn btn-success float-right " data-bs-toggle="modal"
                            data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send Message</button></nobr>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjbVmJYr861zvMG5zdLfm5XA9KcZTrYXMEdSdLFj9Kp6FtWS6tyfsruP7GP8yCtn8IdMnfhqVVXqKAfWjzr7M7dUCg4mHk7B4EymlK1lBrMFBgxWCMC55sDqKTq0Gkxl0sxs6aitOmaG5UhYk-nfY8I_yejw_pE7ZGmVLpa4bP_tG5nbOXx0a15ACUxdqo/s320/Square%20Screenshot%202023-08-18%20045215.png"
                    class="card-img-top" alt="Sample Image">
                <div class="card-body">
                    <h5 class="card-title">Alicia Nash</h5>
                    <p class="card-text">You know you like it but you're scared of the shame <br>

                        You know you like it but it drives you insane</p>
                    <a data-bs-toggle="modal" data-bs-target="#alicianash" class="btn btn-primary">Discover</a>
                    <nobr class="float-right"> <button data-bs-whatever="sendMessage"
                            class=" btn btn-success float-right " data-bs-toggle="modal"
                            data-bs-target="#sendmessagesubmodalexampleModalloginsubmodal">Send Message</button></nobr>
                </div>
            </div>
        </div>
    </div>
</div> -->

...

I think that I got it. The first one.

<!-- 
    11012023 1022 - Needed Bootstrap CDN
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
 -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\p14chconnectionsindex.html -->

<!-- 
this has been added to all slides 
11012023 1022 - Needed Bootstrap CDN
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
-->


[Step 2 integrate original connections - codepen] [In Progress]

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\p14chconnectionsindex.html --> [BootStrap CDN Version Used to Create Chestnut + Hazel Connections]

<!-- [From Calculator Project]
    
<p style="text-align:center" >
<iframe  src=".\options-pricing-calculator-project-13-part-2\src\index.html" 
style=" margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh;  width:50%; height: auto; aspect-ratio: 50/62; " 
scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
allowfullscreen >
</iframe> 
</p>   

-->

style=" margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh;  width:50%; height: auto; aspect-ratio: 50/62; " scrolling="yes"   allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen
style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"allowfullscreen

<!--[Stylesheet for slides] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/CSS/p14s001to015.css"> -->
<!-- This is a lot of work just to set it up. I mean. This is a lot of work just to recycle work. -->
<!-- [https://en.wikipedia.org/wiki/Philip_II] -->

I'm getting closer, I'm making progress. it's taking a long time.
[Resources] [C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\html\p14chconnectionsindex.html]

[https://kennethlarotyamat.github.io/html/jcs0001.html] 
[It's not done, but it's the starting point for the other ones.]
I guess I have some time to get this done, and, I shouldn't worry too much.
it's taking a long time. everything I do takes forever.
<!-- open up a beer play a video game, kissing in the blue dark video games, this is all i think of fun, this is my idea of fun: playing video games -->
<!-- // /* this is my idea of fun: playing video games. */ -->

...

On this day
12 years ago
Kenneth Larot Yamat
November 1, 2011
  · 
Shared with Public
Oh my god, i think i saw someone from my old work here at my new work. I wanted to say hi but i didn't want to go into details.

October 2023 (version 1.84)

Show release notes after an update

Welcome to the October 2023 release of Visual Studio Code. There are many updates in this version that we hope you'll like, some of the key highlights include:

More audio cues - New audio cues to indicate clear, save, and format activity.
Activity bar position - Move Activity bar to the top for compact display.
Hide editor tabs - Show multiple, single, or no editor tabs.
Maximize Editor Groups - Quickly expand the active Editor Group.
Python improvements - Better run code in terminal, easier virtual environment creation.
FastAPI tutorial - Learn about developing Python FastAPI apps with VS Code.
Gradle for Java - Improved support for Java Gradle projects.
Preview: GitHub Copilot - Chat "agents", generate commit messages, terminal support.
If you'd like to read these release notes online, go to Updates on code.visualstudio.com.

Insiders: Want to try new features as soon as possible? You can download the nightly Insiders build and try the latest updates as soon as they are available.

Accessibility
Clear, format, and save opt-in audio cues
When audioCues.clear is enabled, a sound indicates that the terminal, a notification, or the chat responses have been cleared.

In files and notebooks, audioCues.save and audioCues.format can be set to play on user gesture or always for each event. While disabled, an ARIA alert is used instead and can be customized with accessibility.alert.format and accessibility.alert.save.

Windows magnifier synced
The windows magnifier now follows the cursor in VS Code properly.

Accessible View improvements
By default, a user's cursor is positioned at the bottom of the terminal Accessible View; to preserve the position instead, you can set terminal.integrated.accessibleViewPreserveCursorPosition to true.

The Accessible View can be hidden with accessibility.hideAccessibleView, useful if sharing one's screen with an audience of sighted users.

The Accessible View now closes when a user starts typing and focuses the prior element for a smoother work flow.

Text editor in window title focused view
Last iteration, we added a ${focusedView} variable to window.title. We now also indicate when a Text Editor is focused.

Workbench
Customize Activity bar position
You can now move the Activity bar to top of the Side Bar as shown in the following video.

Move Activity bar position

When the Activity bar is placed on the top, the Accounts and Manage buttons are moved to the title bar to the far right.

Note: This is supported only when the custom title bar is enabled ("window.titleBarStyle": "custom").

Hide Editor Tabs
Users are now able to hide editor tabs by setting workbench.editor.showTabs to none. Other showTabs options are multiple (default) and single to show a single editor tab for the active editor.

Hide editor tab bar

Maximize Editor Group
There is a new command View: Toggle Maximize Editor Group (Ctrl+K Ctrl+M) to maximize an editor group. This will hide all other groups and adds a button to the tab bar, allowing the user to restore the previous layout. If the setting workbench.editor.doubleClickTabToToggleEditorGroupSizes is set to maximize, users can double-click on an editor tab to maximize and unmaximize the editor group.

Maximize editor group showing button to restore to original layout

Similar settings search in the Settings editor
Like the Command Palette, the Settings editor now runs a similar settings search to gather more relevant results for a given query.

The implementation is currently in an early stage, and can expect improvements over the next few iterations.

The query "automatically save files" in the Settings editor showing some auto save settings

Confirmation for opening protocol links
When a protocol link for a file or workspace opens in VS Code, a dialog will now ask for confirmation:

Confirm protocol links dialog display for a local file

Protocol links can either point to a local file (for example vscode://file/path/to/file) or to a remote file (for example vscode://vscode-remote/ssh-remote+[USER@]HOST[:PORT]/path/to/file). For each case, there are new settings to disable this behavior:

security.promptForLocalFileProtocolHandling - For local protocol links
security.promptForRemoteFileProtocolHandling- For remote protocol links
Editor
Nearest Quick Fix keyboard shortcut
There is a new setting to activate the nearest Quick Fix in a line from Ctrl+. (command ID editor.action.quickFix), no matter where your cursor is in that line. Previously a preview feature, Code Action Widget: Include Nearby Quick Fixes (editor.codeActionWidget.includeNearbyQuickFixes) is now enabled by default.

The command highlights the source code that will be refactored or fixed with Quick Fixes. Normal Code Actions and non-fix refactorings can still be activated at the cursor location.

Example of new Quick Fix behavior, showing activation on nearest errors, and how all Code Actions are still available at the cursor location

Multi-document highlighting
Initial support for code highlighting across multiple documents was added via the setting Editor: Multi Document Occurrences (editor.multiDocumentOccurrencesHighlight). This initial implementation features only textual occurrences, with support for semantic highlighting coming in the future.


Source Control
Force push using --force-if-includes
This milestone there is now support for the --force-if-includes option, which is an auxiliary option to --force-with-lease added in Git 2.30. The new option ensures that commits that are being force-pushed were created after examining the commit at the tip of the remote reference, and reduces the chance of losing commits when auto fetch is enabled. You can disable the use of --force-if-includes by disabling the git.useForcePushIfIncludes setting.

Notebooks
Scroll on Execute improvements
How the next cells are revealed when executing through notebooks with Shift+Enter was improved to help focus on the output. This also reduces the amount of cell movement when re-executing cells that already have output.


IPython stack trace rendering
Exception stack traces from IPython now render clickable links to help navigate to the error. This will only apply if the Jupyter extension does not alter the stack trace first: "jupyter.formatStackTraces": false.


Debug
JavaScript Debugger
Improved Event Listener Breakpoints view
The Event Listener Breakpoints view is friendlier and is now presented as a tree with checkboxes:

Event Listener Breakpoints view shown as a tree with the Canvas WebGL Error Fired event checked

Better handling of sourcemap renames
When code is compiled with a bundler, variables can be renamed. This is especially common with imports in all bundlers, and certain local identifiers in esbuild. The debugger is now aware of scopes each rename applies to, which fixes many snags users historically hit.

This requires the debugger to parse the syntax tree of compiled modules. This is done in a background thread and only when renames are detected, but the behavior can be disabled by setting "sourceMapRenames": false in your launch.json to avoid any performance impact.

Remote Development
The Remote Development extensions, allow you to use a Dev Container, remote machine via SSH or Remote Tunnels, or the Windows Subsystem for Linux (WSL) as a full-featured development environment.

Highlights include:

You can now log into Tunnels using your Microsoft account.
Connect to Dev Containers over SSH and Tunnels now supported on Windows.
You can learn more about these features in the Remote Development release notes.

Contributions to extensions
GitHub Copilot
Streaming inline chat
The GitHub Copilot Chat extension's inline chat can now make progressive text edits and "types" at the rate at which a response being received. This is a more natural experience than the previous behavior of waiting for the entire chat response to be received before applying it to the editor.


Not all edits are insertions, and for replacements Copilot sometimes has a hard time figuring out where to start. In those cases, streaming might not yet work as expected. Stay tuned for improvements in this area.

Chat agents
This iteration, we built a new way to interact with Copilot Chat: agents. Agents are like experts who have a specialty that they can help you with, and you can talk to them in the chat by mentioning them with the @ symbol. Currently, there are two agents:

@workspace has context about the code in your workspace and can help you navigate it, finding relevant files or classes.
@vscode knows about commands and features in the VS Code editor itself, and can help you use them.
Each agent also supports a few slash commands, and the slash commands that you may have used before should now be used with an agent. For example, /explain is now @workspace /explain. But as a shortcut, you can also just type / for a list of completions that will automatically expand to the full agent and command.

@workspace
The @workspace agent uses a meta prompt to determine what information to collect from the workspace to help answer your question. One approach used by the meta prompt is to look back at your conversation history to resolve ambiguous words/phrases in a question. For example, if you ask @workspace What does it do?, the meta prompt will now consider the history to figure out what it actually is and what information to collect to answer the question. The meta prompt also uses a wide set of terms, including more synonyms, to generate a list of potentially relevant terms.

File paths and symbols in @workspace responses are clickable links. This makes it easy to navigate to the code that Copilot is referring to.

The @workspace agent respects the .gitignore and .copilotignore when deciding which files from the workspace to index.

Agents replace slash commands
The new agents replace the functionality of slash commands such as /createWorkspace and /createNotebook with added slash modifiers:

/createWorkspace --> @workspace /new
/createNotebook --> @workspace /newNotebook
/explain --> @workspace /explain
/fix --> @workspace /fix
/test --> @workspace /test
/vscode --> @vscode /api
Slash command menu showing agents and slash modifiers

Try out the new agents, and type /help for more tips!

Commit message generation
Copilot Chat can now generate commit messages based on the pending changes using the new "sparkle" action in the Source Control input box.


Import grouping
Generated imports are now always put to the top of the file or below existing import blocks. This is supported for most common programming languages.

Improved /explain context
You can ask Copilot Chat to explain a code selection in your active editor either through the @workspace /explain command or through the Explain with Copilot action in the context menu. Copilot Chat now includes the implementations of referenced symbols such as functions and classes, leading to more accurate and useful explanations. This works best across files when you have an extension contributing language services installed for one of the following languages: TypeScript/JavaScript, Python, Java, C#, C++, Go, or Ruby.

Persistent chat view state
Previously, the Copilot Chat view was initially hidden and then later shown. The Copilot Chat view now remains active between window reloads so you don't have to manually reopen it. Additionally, the Chat view now guides you through the process of signing into GitHub and activating your free trial of GitHub Copilot.

Chat using configured display language
By default, Copilot Chat now initially responds using your configured display language in VS Code. You can override this automatic behavior by configuring github.copilot.chat.localeOverride.

Reduce welcome message verbosity
You can now control whether Copilot Chat greets you with a verbose welcome message when you first start a conversation by configuring github.copilot.chat.welcomeMessage. The options are first (default), always, and never.

Terminal Quick Fixes
When a failed command is run in the terminal, Copilot will now offer a Quick Fix to explain what happened.

A sparkle icon shows up that offers to explain a command

This can be triggered via the sparkle icon (Ctrl+.) next to the current terminal prompt.

Terminal command suggestions
Copilot can now offer CLI command suggestions via the Ctrl+I keybinding when the terminal is focused. This brings up Quick Chat with @workspace /terminal pre-filled:

Ctrl/Cmd+I now opens up the Quick Chat

This /terminal slash command is optimized for suggesting shell commands using the current shell. The quality of suggestions and UX will see more improvements next release.

Improved surfacing of Run in Terminal action
When a code block has a shell language type, the Run in Terminal action is now surfaced on hover of the code block:

The code block now shows run in terminal in the top level actions, not hidden in the overflow menu

Inline chat can reply with terminal commands
The inline chat can now reply with commands to be run in the terminal:

Run in terminal from inline chat

Python
Improvements to run line in the terminal
The Python extension has improved the behavior of sending lines to the Python REPL (Shift+Enter) when no code has been selected to run. Previously, when you placed the cursor on a line of Python code and pressed Shift+Enter, the Python extension would send the exact line content to the REPL, even if it would fail, for example, due to being part of a multi-line command.

With the new experimental Smart Send feature, the Python extension sends the smallest block of runnable code surrounding the cursor position to the REPL for execution. This ensures that only complete and executable sections of code are sent to the REPL. The cursor will also be automatically moved to the next executable line, to provide a smooth experience when executing multiple chunks iteratively.

To try it out, you can add the following User setting: "python.experiments.optInto: ["pythonREPLSmartSend"]. While this feature is currently behind an experiment, we expect it to be the default behavior in the future. If you have feedback or suggestions on how we can further improve this feature, please let us know!


Theme: Catppuccin Macchiato (preview on vscode.dev)

Improvements to Python linting extensions
We have made several improvements to our supported linting extensions to allow for a more configurable and flexible experience with your favorite Python tools.

The Pylint, Mypy and Flake8 extensions now offer settings that allow you to specify glob patterns for files that you wish to exclude from linting. This can be useful if you are working with a large codebase with many subprojects, and want to exclude certain folders from being linted. These settings are "pylint.ignorePatterns", "mypy-type-checker.ignorePatterns" and "flake8.ignorePatterns".

These extensions also support cwd settings, which allows you to specify the working directory for the linter. This setting has been updated to support the variable ${fileDirname}, so the working directory can be dynamically set to the parent folder of the file you have open in the editor. This is useful if you are working with mono repos, and want the linter working directory to be dynamically updated as you open files from different subprojects. These settings are "pylint.cwd", "mypy-type-checker.cwd" and "flake8.cwd".

The default value of the "mypy-type-checker.preferDaemon"setting was changed (only applicable to the Mypy extension). Previously, it was set to true, which meant that the Mypy daemon would be used by default. After receiving feedback, we changed the default value to false. If you are wondering which value would best for you, our recommendation is to use the Mypy daemon if you enabled the Mypy reporting scope to be the entire workspace ("mypy-type-checker.reportingScope": "workspace") for performance reasons. Otherwise, if the reporting scope is set to the current file, we recommend you use the Mypy executable that shipped with the extension.

Deprecated built-in linting and formatting features
With all the work and improvements made to the linting and formatting extensions in VS Code, we have deprecated the built-in linting and formatting features that are shipped in the Python extension. This includes all the linting and formatting commands as well as settings (python.linting.* and python.formatting.*). We recommend you remove these deprecated settings if you are still using them, and use the supported linting and formatting extensions instead.

If you are using a linter without a supported extension, check out the community-contributed Ruff extension. Ruff is a Python linter written in Rust and supports various linters such as pyflakes, pycodestyle, pydocstyle, and more. Recently support was added for using Ruff as a formatter in VS Code ("[python]": { "editor.defaultFormatter": "charliermarsh.ruff" }).

You can also create your own linter or formatter VS Code extension for your favorite Python tool. Check out our Python Tools Extension Template for a quick start.

Create environment notification
Virtual environments are a recommended way to work with Python projects with dependencies that need to be installed. They offer isolation and reproducibility and are very popular in Python projects.

For this reason, the Python extension now displays a notification when you attempt to run or debug a Python file or project with listed dependencies when you don't have a virtual environment selected on your workspace. This notification provides a quick way to create a new virtual environment through the Python: Create Environment command.

If you already have a virtual environment on your workspace, you have the option to select it, or delete and recreate it.

This notification can be disabled by setting python.python.createEnvironment.trigger to off.

Notification stating that a virtual environment is not currently selected with an option to Create the environment or disable the notification

Virtual environment deactivation helper
A couple of months ago we announced a new experimental feature for terminal activation using environment variables, to enhance your development workflow by automatically activating the selected environment in the terminal without the need for explicit activation commands. However, since there are no explicit activation scripts working, the deactivate command was no longer working when this experiment was enabled.

The Python extension will now detect when you attempt to run the deactivate command and show a helper notification to guide you on how to add scripts for your shell so the command will work again when the environment is activated through environment variables. It also offers a button to open your shell profile file for you to add the necessary scripts.

Notification stating that the deactivate command is not working and offering a button to open the shell profile file

You can find the full documentation on how to add the necessary scripts for your shell on the vscode-python wiki.

If you are not in the experiment and would like to try out this feature, you can add the following User setting: "python.experiments.optInto: ["pythonTerminalEnvVarActivation"].

Improvements to test output
We've made significant improvements to how you can view and interact with the test output in the Python extension when the pythonTestAdapter experiment is enabled, announced a few months ago. Previously, output from test discovery and execution was inconsistently scattered across the Python Test Log output channel and the Test Results panel, with some information being duplicated in both. To consolidate the experience, output related to test execution is displayed in the Test Results panel, and test discovery in the Python output channel. To learn more, read our related vscode-python wiki.

This new approach also supports colorization in the output if you are using Pytest and set "python.testing.pytestArgs": ["--color=yes"] in your settings.json. Colorization only works for test execution in the Test Results panel and will not work for discovery or for output in the Python Test Log panel.

Test execution output displayed in Test Results panel with colors, while test discovery output is displayed in the Python output channel

There is also a new button Show output to easily open the Test Logs from the Test Explorer view when errors on test discovery occur.

"Show output" button to open the Test Logs in the Test Explorer view

Platform-specific versions of the Python Debugger extension
The Python Debugger extension now ships platform-specific versions, so that only the necessary platform-specific files are installed on every update. This reduces the size of the extension and helps improve startup time.

Tensorboard extension
The Tensorboard functionality has moved out of the Python extension into a standalone Tensorboard extension.

If you have any issues with this new extension or wish to provide feedback, you can file an issue in the Tensorboard extension GitHub repo.

Jupyter
Execute with Precedent/Dependent Cells
With the Jupyter extension, you can now run all precedent or dependent cells of a target cell from the dropdown menu next to the Cell Run button. This is still a preview feature and can be enabled with the jupyter.executionAnalysis.enabled setting and the notebook.consolidatedRunButton setting.

This feature is currently powered by the Pylance extension so you will need to install the latest Prerelease version of Pylance to use this feature.


VS Code Speech
We are introducing a new extension to bring voice support to VS Code! The new VS Code Speech extension integrates into GitHub Copilot Chat to enable voice-to-text transcription services for Chat input.

Once installed, a microphone icon appears and when selected, begins filling Chat input with text based on the transcribed results of your voice. The transcription is computed locally on your machine and does not require a connection to the internet.

VS Code Speech activated by the microphone icon

GitHub Pull Requests and Issues
There has been more progress on the GitHub Pull Requests and Issues extension, which allows you to work on, create, and manage pull requests and issues.

Projects are displayed and can be added from the Pull Request description webview.
Integrated with GitHub Copilot to generate the PR title and description from the PR Create view.
PRs checked out with the GitHub CLI (gh pr checkout) are recognized by the extension.
Review the changelog for the 0.76.0 release of the extension to learn about the other highlights.

Preview Features
Floating editor windows
We continued exploring how to pull editors out of the workbench window into their own windows and now want to invite the VS Code Insiders community to play with this exciting new feature and provide feedback.

Make sure to install VS Code Insiders and run the new View: Move Active Editor into a New Window command on editors to open them in a floating window.


We still have to figure out many issues and provide missing features, but we are optimistic that we can enable this feature in Stable in the near future.

Thanks for testing!

WASM-WASI support for Language Servers
Support for language servers in WASM/WASI was added to the experimental wasm-wasi-core extension.

There is also an extension showcasing a simple language server written in Rust and compiled to WASM in the vscode-wasm repo. The extension depends on the language server crate maintained by the Rust analyzer team.

Extension authoring
Improved test runner
There is now a command-line runner and extension for VS Code to make running tests for extensions easier. Extensions using the new approach can run in VS Code's testing UI. While some migration is required, this usually only takes a few minutes. Read the VS Code Testing Extensions documentation for more information.

Finalized TestMessage.contextValue API
You can provide a contextValue on TestMessages to be shown when users take actions on those messages. Additionally, two new menu contributions points are available, testing/message/context and testing/message/content. The former is displayed on the message in the Test Results tree view, and the latter is displayed over the message in the editor. For example, this might be used to provide an action to update a fixture in snapshot testing:

Failed test result with Update Snapshot action displayed

Read more about contextValue in issue #190277.

Updated codicons
The following new icons were added to our codicon library:

New codicons

copilot
git-fetch
mic
mic-filled
coffee
snake
game
vr
chip
piano
music
thumbsup-filled
thumbsdown-filled
New theme colors
textPreformat.background: Background color for preformatted text segments
Root folder icons per name
File icon themes authors can now define name specific icons for root folders using the new properties rootFolderNames and rootFolderNamesExpanded. You can review the File Icon Theme guide for more information.

Proposed APIs
Every milestone comes with new proposed APIs and extension authors can try them out. As always, we want your feedback. Here are the steps to try out a proposed API:

Find a proposal that you want to try and add its name to package.json#enabledApiProposals.
Use the latest @vscode/dts and run npx @vscode/dts dev. It will download the corresponding d.ts files into your workspace.
You can now program against the proposal.
You cannot publish an extension that uses a proposed API. There may be breaking changes in the next release and we never want to break existing extensions.

Support configuring data sent to extensions via Issue Reporter
A new proposed API lets extension authors send additional data via the Issue Reporter.

        export interface IssueUriRequestHandler {
    // Handle the request by the issue reporter for the Uri you want to direct the user to.
    handleIssueUrlRequest(): ProviderResult<Uri>;
  }

        export interface IssueDataProvider {
    // Provide the data to be used in the issue reporter.
    provideIssueData(token: CancellationToken): ProviderResult<string>;

    // Provide the template to be used in the description of issue reporter.
    provideIssueTemplate(token: CancellationToken): ProviderResult<string>;
  }

        export namespace env {
    export function registerIssueUriRequestHandler(handler: IssueUriRequestHandler): Disposable;
    export function registerIssueDataProvider(provider: IssueDataProvider): Disposable;
  }

You can provide a URI via handleIssueUrlRequest to have the extension issue filed externally on GitHub, or provide a template string and extension data string for provideIssueData and provideIssueTemplate in order to send additional extension data to GitHub via the Issue Reporter.

Read more about this proposal in issue #196863.

File watchers with custom exclude rules
This milestone we added a proposed API for creating file system watchers with full control over exclude rules:

export interface FileSystemWatcherOptions {
  /**
   * An optional set of glob patterns to exclude from watching.
   * Glob patterns are always matched relative to the watched folder.
   */
  readonly excludes?: string[];
}

export function createFileSystemWatcher(pattern: RelativePattern, options?: FileSystemWatcherOptions): FileSystemWatcher;

This new API gives your extension full control over the file watcher, irrespective if it's a recursive or non-recursive watcher or whether it wants to watch inside or outside the workspace. User or default configured exclude rules for file watching will not apply, so you can be sure to receive only the events you subscribed to.

Engineering
Windows 32-bit support ends
There is no longer support for Windows 32-bit VS Code. If you're still on 32-bit build of VS Code, you should update to the 64-bit version.

Extensions and documentation
Gradle for Java
Java development in VS Code just got easier with the improved Gradle for Java extension. The pre-release version has better support for building Gradle projects thanks to adopting the Build Server Protocol (BSP). Similar to other protocols used in VS Code, for example the Language Server Protocol (LSP), the BSP provides an abstraction layer between development environments and build tools such as Gradle.

To try out the new Gradle support, install both the Extension Pack for Java and pre-release version of the Gradle for Java extension. You can learn more about Gradle and the BSP in this recent blog post from the Java extension team.

Gradle for Java pre-release extension

FastAPI tutorial
FastAPI is a modern and fast web framework for building Python APIs, and has become more and more popular thanks to its simplicity and performance.

You can now learn how you can get the best out of VS Code and the Python extension to create and debug FastAPI applications through our new FastAPI Tutorial!

Custom Layout user guide
There is a new Custom Layout article describing layout customization for the workbench and editors. There you'll learn how to modify VS Code's main UI elements such as views, panels, and editors to fit your preferred workflow.

Customize Layout dropdown

Topics include:

Primary and Secondary Side Bars
Panel position and alignment
Pinned editor tabs
Editor group layout
and more
Notable fixes
194812 ToC shows up while doing search while workbench.settings.settingsSearchTocBehavior set to hide
195722 Blank settings editor when having network issues
Thank you
Last but certainly not least, a big Thank You to the contributors of VS Code.

Issue tracking
Contributions to our issue tracking:

@gjsjohnmurray (John Murray)
@IllusionMH (Andrii Dieiev)
@starball5 (starball)
@ArturoDent (ArturoDent)
Pull requests
Contributions to vscode:

@amaust (Andrew Maust): Fixes Aria Label Showing [Object object] PR #195929
@Cazka: Fix typo for incrementalNaming setting PR #194900
@Charles-Gagnon (Charles Gagnon): Fix arrow nav on dropdown action buttons focusing hidden dropdown PR #167662
@christian-bromann (Christian Bromann): Only render notebook container if visible PR #188226
@Connormiha (Mikhail): fix: simplified map+flat PR #193949
@futurist (James Yang): fix: dom.test.ts typo PR #195249
@gjsjohnmurray (John Murray)
Correct the CLI helptext for --profile PR #193766
Allow hiding of launcher on Run and Debug title bar when debugging PR #193812
Preselect correct row in Extension Log Level quickpick (fix #194515) PR #194517
Show Reload Required buttons simultaneously after updateAllExtensions (#163627) PR #195421
Show trust editor tab icon correctly for "window.density.editorTabHeight": "compact" (fix #196209) PR #196212
Centre numbers vertically in top activity bar badges (fix #196691) PR #196696
Correct the #196696 fix which caused oval badges PR #196715
Upsize progress badge on top activity bar to match #196696 change PR #196724
@harbin1053020115 (ermin.zem)
fix: fix editor progress position when enabled pinnedTabsOnSeparateRow PR #195314
feat: support iconThemes definitions for root folders PR #195319
@hsfzxjy (hsfzxjy): Fix faster __vsc_escape_value PR #194459
@jeanp413 (Jean Pierre): Fixes websocket doesn't handle ping frames correctly PR #194436
@jiawei-hong (Wei): styles: only needs to be set border-right-width is none if it is not … PR #195078
@jruales (Joaquín Ruales): Skip regex.replace() cost when there's nothing to replace PR #194854
@Jvr2022 (Jvr)
cleanup unused files in .github PR #189066
Fix grammar PR #194970
@k-yle (Kyℓe Hensel): fix syntax highlighting for .git-blame-ignore-revs PR #194584
@MichaelChirico (Michael Chirico): Update org in reference repo PR #194415
@MrYuto (Yuto Liyosa)
Make OpenDisassemblyViewAction an Action2 PR #195623
Resolve absolute file target links in tsconfig (#195514) PR #195759
@sandeep-sen (Sandeep Sen): Adding mgmt libraries for Go + changing matcher logic for Go PR #191036
@SimonSiefke (Simon Siefke): fix: memory leak in menu PR #196302
@tats-u (Tatsunori Uchino): Add support for --force-if-includes to force push more safely PR #187932
@tisilent (xiejialong)
Disable transform optimization SettingsTree PR #179095
Terminal: fix rename and injection PR #194621
fix #191201 PR #194965
@vuittont60: fix typos PR #195562
@whscullin (Will Scullin): Make sure link fragment is preserved PR #193743
@yiliang114 (易良)
feat: Add the logo of the built-in extension PR #192999
fix: to #157015 fix view label command localized PR #193544
fix: Close #195980, Fix contribute points default display for extensions PR #195984
Contributions to vscode-js-debug:

@OnesAndZer0s (OnesAndZer0s): feat: Tidying Up of Instrumentation Breakpoints PR #1853
Contributions to language-server-protocol:

@manandre (Emmanuel André): Fix NotebookDocumentSync example PR #1831

...

I don't reall know if I'm going to be able to read all of that. it was regarding the update to VS Code.
/* this is my idea of fun: playing video games. */
// /* this is my idea of fun: playing video games. */
<!-- // /* this is my idea of fun: playing video games. */ -->

I'm trying to think. where did I leave off? I'm going to come back around to this project later. I'll finish it, obviously, but 
I'm going to take a break. 

...

[Project 14 Outline] [Start] [Due 11/04]

Step 3 integrate quiz project - project 12
Create json file for responses
Create asynchronous function for responses
make the text appear on the screen the way it does on CHAT GPT
- make it appear that someone is actually typing responses - 

So here it is. I have to bring the quiz project, project 12 into this, both as a json 
and i have to make responses asynchronous in a way that makes the text appear on screen
like someone is typing them out.

this is supposed to look like a dating simulator.

I want the slider project to make it look like a swipe left swipe right the way it is on dating apps.
this is supposed to be a dating app and dating simulator.   

[Project 14 Outline] [End]

...

