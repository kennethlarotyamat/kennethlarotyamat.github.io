the homework for october 28th is done.
now I just have to figure out project 14

...

<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->
<link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css">
<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->

...

1. Project

Communicating on the Web

For this project, you will be adding something we’ve studied this week to your personal web page. This makes the code yours, 
and can be an example of your knowledge. There doesn’t necessarily have to be a purpose for what you choose to add; in some 
ways you simply want to show off your skills to a potential employer. Choose from:

Leaflet

Asynchronous Functions [asynchronous functions]

Collect form information in json format

Google Maps

Whatever you choose, be sure to have clear comments in your code so a reviewer can understand what you did, and also so you can 
go back a month or more later and be reminded of what your thought process was.
When finished, submit your code!

Submission steps:

Before you click on "Mark as Completed":

You need to do one of the following: either upload all of your files to Codio or deploy a GitHub Page for this project.
Also, if you mark this project as complete but any of the boxes are blank, your TA will be unable to grade your project.

Codio upload:

Make sure all of your project code has been uploaded to Codio.
If you did not write your code in Codio, you will need to import all of the required files into your workspace file tree.
You can do this by going to File => Upload Files, and either manually importing each file, or dragging and dropping your project folder.
Please refer to this video if you are unsure of what to do.

GitHub Pages:

If you would rather upload your project to GitHub, please make sure to have the project deployed as a GitHub page 
so we can thoroughly test it. If you are unsure of how to do this, please follow these instructions.
It is important to understand you will need to make a separate repository for every project. You cannot deploy multiple 
pages from the same repository, even with different branches.
Also, no matter whether you uploaded your files from your computer or not, make sure to thoroughly test your code! This 
only takes a few minutes, but will prevent the amount of resubmissions because you missed something.

...

[Asynchronous functions] [Module Dealing with Asynchronous Functions]

https://www.youtube.com/watch?v=o2uivI8FdTc

[https://docs.google.com/document/d/1nC59RMOhZAWZO1_fdGAaeykVETOt3ODm5G2u9lPBda0/edit#heading=h.ik10jyq3fy44]

2

Communicating on the Web: HTTP/HTTPS, APIs, Async 1 - Thursday, October 26

In the first lesson you will understand what Synchronous means, understand what Asynchronous means, 
and build Asynchronous functions with JavaScript. In the second lesson you will understand Javascript 
Promises, learn how use Javascript Promises, and know the benefits of Javascript Promises. In the third 
lesson you will understand how an API works, know its different architectures, and create your own API.

...

I'm going to rule out working on a Leafelet or a Google Maps project for Project 14

[Collect form information in json format]

This seems like the best option because we've come across these before, so, I might be more 
familar with them, the other stuff is newer. In fact, I think that I was going to use a json file 
for project 12, but I think I put that off.

[https://docs.google.com/document/d/1nC59RMOhZAWZO1_fdGAaeykVETOt3ODm5G2u9lPBda0/edit#heading=h.ik10jyq3fy44]

...


Daryl - TA
8:58 AM

Hello @channel, please find Project Time schedules for this week below:
:alphabet-yellow-hash: What is Project Time?
It is a live zoom session where you work on your weekly project individually and a TA is available to answer any questions you might have regarding the project. If plan to work on the project later this week but have questions, you can always drop by and ask those questions.
You are able to attend either or both project sessions. If you can't make project times but need help, check office hour availability bookmarked at the top of this channel! Or feel free to check if other TAs are available as well: Software Web Development 4 TA Availability

:date: Wednesday, November 1st, 8:00pm - 9:00pm ET / 5:00pm - 6:00pm PT
:round_pushpin:Zoom
:microphone: Hosted by 
@Daryl - TA

:date: Thursday, November 2nd, 7:00 - 9:00pm ET / 4:00pm - 6:00pm PT
:round_pushpin:Zoom
:microphone: Hosted by 
@Jheremy - TA

:point_right: p.s: Please review all the materials from the prior modules before starting your projects.

...

Week 15 (10/24-10/28)
Module 14: Communicating on the Web: HTTP/HTTPS, APIs, Async


1

Professional Development #4 - Tuesday, October 24



2

Communicating on the Web: HTTP/HTTPS, APIs, Async 1 - Thursday, October 26

In the first lesson you will understand what Synchronous means, understand what Asynchronous means, and build Asynchronous functions with JavaScript. In the second lesson you will understand Javascript Promises, learn how use Javascript Promises, and know the benefits of Javascript Promises. In the third lesson you will understand how an API works, know its different architectures, and create your own API.

Session Recording - Module 14 Day 1 - Thurs., October 26
Module 14 Lesson 1.1
Module 14 Lesson 1.2
Module 14 Lesson 1.3

3

Communicating on the Web: HTTP/HTTPS, APIs, Async 2 & 3 - Saturday, October 28

Part 2: In the first lesson you will understand the usefulness of JSON files, know the structure of a JSON file and be able to build a JSON file. In the second lesson you will know how to work with the fetch method, be able to get data using the fetch method and execute a public free API. In the third lesson you will learn how to work with Leaflet, implement a solution with maps using Leaflet and practice knowledge in JavaScript. Part 3: In the first lesson you will learn how to set up Google Cloud ,create a project in Google Cloud, learn how to use Google Maps API and how to enable APIs in Google Cloud. In the second lesson you will learn how to use Google API keys in your deploy, how to restrict an API key and develop some simple examples using Google Maps APIs. In the third lesson you will practice all of the concepts and topics learned in this week, explore Google documentation and learn new things and finally improve your skills in JavaScript and in working with APIs.

Session Recording - Module 14 Day 2 - Sat., October 28
Module 14 Lesson 2.1
Module 14 Lesson 2.2
Module 14 Lesson 2.3
Module 14 Lesson 3.1
Module 14 Lesson 3.2
Module 14 Lesson 3.3
Project 14

...

[Project 14 Notes]

I'm leaning toward doing a json. to doing the json option, but I want to see if there is anything
that I could do with Asynchronous Functions.

...

Spanish
English
diversion
fun
Community Verified icon Verified

Translations of diversión
noun
fun
diversión, alegría, broma, chirigota
diversion
desviación, diversión, distracción, trasvase, entretenimiento, descanso
amusement
diversión, esparcimiento, entretenimiento, regocijo, distracción, atracción
entertainment
entretenimiento, diversión, espectáculo, agasajo
play
juego, obra, jugada, diversión, teatro, holgura
relaxation
relajación, descanso, relajamiento, aflojamiento, diversión, recreo
avocation
pasatiempo, distracción, afición, ocupación, diversión

...

I'm only familiar with pasatiempo as the word I'm looking for.

...

[https://www.youtube.com/watch?v=NYatLKK31-g]

...

where was I?

...

Goals
By the end of this lesson you will:
Understand what Synchronous means
Understand what Asynchronous means
Build Asynchronous functions with JavaScript
Introduction
This lesson explains the difference between Synchronous and Asynchronous JavaScript and how to build these functions in JavaScript. The topics covered will help you understand how JavaScript works by way of Synchronous or Asynchronous loading.
JavaScript is a single-threaded synchronous language, which means that the code is executed in order, one piece at a time. However, in some situations, JavaScript may appear to be asynchronous. This is made possible through the use of functions that allow the code to be executed out of order, at a different time than when it was dispatched. This change in the order of execution is known as asynchronous execution.

...

1. Synchronous & Asynchronous JavaScript
synchronous asynchronous
Goals
By the end of this lesson you will:
Understand what Synchronous means
Understand what Asynchronous means
Build Asynchronous functions with JavaScript
Introduction
This lesson explains the difference between Synchronous and Asynchronous JavaScript and how to build these functions in JavaScript. The topics covered will help you understand how JavaScript works by way of Synchronous or Asynchronous loading.
JavaScript is a single-threaded synchronous language, which means that the code is executed in order, one piece at a time. However, in some situations, JavaScript may appear to be asynchronous. This is made possible through the use of functions that allow the code to be executed out of order, at a different time than when it was dispatched. This change in the order of execution is known as asynchronous execution.
Next

...

1. Synchronous & Asynchronous JavaScript
synchronous asynchronous
Goals
By the end of this lesson you will:
Understand what Synchronous means
Understand what Asynchronous means
Build Asynchronous functions with JavaScript
Introduction
This lesson explains the difference between Synchronous and Asynchronous JavaScript and how to build these functions in JavaScript. The topics covered will help you understand how JavaScript works by way of Synchronous or Asynchronous loading.
JavaScript is a single-threaded synchronous language, which means that the code is executed in order, one piece at a time. However, in some situations, JavaScript may appear to be asynchronous. This is made possible through the use of functions that allow the code to be executed out of order, at a different time than when it was dispatched. This change in the order of execution is known as asynchronous execution.
Next

...

2. What is Synchronous Execution?
Synchronous execution in JavaScript refers to events that occur sequentially, one after another. It’s like doing things in a straight line, with one thing happening at a time. This means that the code is executed in a single-threaded manner.
synchronous asynchronous image
The figure above shows an example of synchronous execution, where Process A dispatches (calls) Process B. During this time, Process A pauses and waits until Process B runs to completion. Once Process B is complete, it returns to Process A, and Process A resumes its execution. This is because JavaScript is single-threaded / synchronous, which means that only one process can run at a time.
In this example, you will see how synchronous JavaScript works in practice:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="utf-8" />
   <title>Synchronous</title>
</head>
<body>
   <div id="message"></div>
   <script>
       var msg = document.getElementById("message");
 
       function fun1() {
           msg.innerHTML += "<p>fun1 started :)</p>";
           fun2();
           msg.innerHTML += "<p>fun1 ended :)</p>";
       }
       function fun2() {
           msg.innerHTML += "<p>fun2 started :)</p>";
           msg.innerHTML += "<p>fun2 ended :)</p>";
       }
       fun1();
   </script>
</body>
</html>
Output
fun1 started :)
fun2 started :)
fun2 ended :)
fun1 ended :)
When dealing with a large amount of code, synchronous loading of JavaScript files can be time consuming. Since long load times are undesirable, we solve this problem with asynchronous loading.
What is Asynchronous Loading?
With asynchronous loading, events take place independent of the main process allowing for the execution of several processes in parallel.
synchronous asynchronous
Process A dispatches Process B. Process A continues to execute in parallel with Process B to completion without depending on one another. In this way, total execution time is reduced and a faster load time is achieved.
Following a single recipe is most likely a(n) 
Synchronous
 task. Cooking three dishes simultaneously is most likely a(n) 
Asynchronous
 task.
Check It! (2 left)
Next

...

3. How to create an Asynchronous function in JavaScript
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="utf-8" />
   <title>Asynchronous</title>
</head>
<body>
   <div id="text"></div>
   <script>
       var msg = document.getElementById("text");
 
       function fun1() {
           setTimeout(function () {
              msg.innerHTML += "<p>fun1 started :)</p>";
              msg.innerHTML += "<p>fun1 ended :)</p>";
           },100);
       }
      function fun2() {
           msg.innerHTML += "<p>fun2 started :)</p>";
           fun1();
           msg.innerHTML += "<p>fun2 ended :)</p>";
       }
 
       fun2();
   </script>
</body>
</html>
Output
fun2 started :)
fun2 ended :)
fun1 started :)
fun1 ended :)
Step by step of previous code:
The code calls function fun2()
The function fun2() shows text “fun2 started :)”
The function fun2() calls function fun1()
The function fun1() waits for 100 ms before outputting its text, but function fun2() does not wait for fun1() to be finished before moving on; fun2() jumps on the next statement immediately and shows the text “fun2 ended :)”
After of 100 ms, function fun1() executes its next statement showing text “fun1 started :)”
Function fun1() then shows text “fun1 ended :)”
Because the two functions can run in parallel, asynchronous JavaScript loads more quickly than synchronous JavaScript.
In the previous code example, we used the setTimeout(Function, Time in milliseconds) function to delay the execution of fun1() by 100ms. This function allows you to pause the execution of a piece of code for the amount of time specified in the function argument before resuming its execution.
Additionally, we can use the setInterval(Function, Time in milliseconds) function to repeatedly execute a piece of code at a specified time interval. This function is useful when we need to run a certain piece of code repeatedly, such as updating the user interface or making periodic requests to a server.
Let’s see it in action:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="utf-8" />
   <title>Asynchronous</title>
</head>
<body>
   <div id="text"></div>
   <script>
       var msg = document.getElementById("text");
 
       function fun1() {
           setInterval(function () {
              msg.innerHTML += "<p>fun1 started :)</p>";
              msg.innerHTML += "<p>fun1 ended :)</p>";
           },60000);
       }
      function fun2() {
           msg.innerHTML += "<p>fun2 started :)</p>";
           fun1();
           msg.innerHTML += "<p>fun2 ended :)</p>";
       }
 
       fun2();
   </script>
</body>
</html>
Output
fun2 started :)
fun2 ended :)
fun1 started :)
fun1 ended :)
fun1 started :)
fun1 ended :)
… 
fun1 started :)
fun1 ended :)
Every 60 seconds, the function fun1() will be called.
Warning: the function setInterval could run infinitely without stopping. Be sure to tell it when to stop.
Next

...

4. How to create an Asynchronous function in JavaScript part 2
Exercise 2:
Build a clock using the function setInterval()
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Clock</title>
</head>
<body>
  <div id="text"></div>
  <script>
       var msg = document.getElementById("text");
      function clock() {
          //code here
      }
      clock();
  </script>
</body>
</html>
Tip: Use the Date object, for more information here.
We can implement asynchronous functions using the async, await, and Promise keywords. The async keyword defines an asynchronous function, which allows us to write asynchronous code that looks and behaves like synchronous code.
By using the async keyword, we can make a function return a Promise, which can be resolved or rejected at a later time. The await keyword is used to wait for the completion of a Promise, which allows us to write code that looks like synchronous code but behaves asynchronously.
Syntax
async function FunctionName(){
    ...
}
await: The “async” function contains “await” which pauses execution of an “async” function. “await” is only valid inside the “async” function.
<!DOCTYPE html>
<html lang="en">

<head>
   <meta charset="utf-8" />
   <title>Asynchronous function using "Async"</title>
</head>

<body>
   <div id="text"></div>

   <script>
       var msg = document.getElementById("text");
       function fun1() {
           return new Promise(function (resolve, reject) {
               setTimeout(function () {
                   msg.innerHTML += "<p>fun1 started :)</p>";
                   msg.innerHTML += "<p>fun1 ended :)</p>";
                   resolve();
               }, 100);
           });
       }

       async function fun2() {
           msg.innerHTML += "<p>fun2 started :)</p>";
           await fun1();
           msg.innerHTML += "<p>fun2 ended :)</p>";
       }

       fun2();
   </script>

</body>

</html>
Output
fun2 started :)
fun1 started :)
fun1 ended :)
fun2 ended :)
In the above example, the engine waits for fun1() to finish its execution before executing the next line. The “await” stops the execution of that code segment until a Promise is received.
Why use await if async is faster?
async allows for faster code execution, but it can cause issues when order or dependencies matter. await can pause execution until a process completes to ensure correct code execution and avoid errors.
Next

...

5. Conclusion & Takeaways
Asynchronous JavaScript is a powerful functionality that can be incredibly helpful in your journey as a web developer. By allowing for multiple processes to run simultaneously, asynchronous code can greatly improve the performance and functionality of your applications.
However, it’s important to be careful when using the setInterval function, which can cause your code to run indefinitely without stopping. To avoid this issue, it’s important to specify when the interval should stop running, either by using clearInterval or by implementing a stop condition within your code.
By using asynchronous JavaScript correctly and being mindful of potential issues, you can take full advantage of its benefits and build high-quality, efficient web applications.
Attribution
Asynchronous JavaScript . (n.d.). https://www.w3schools.com/js/js_asynchronous.asp
GeeksforGeeks. (2021, December 17). How to create an Asynchronous function in Javascript? https://www.geeksforgeeks.org/how-to-create-an-asynchronous-function-in-javascript/
Mark as UncompletedBack to dashboard

...

[Project 14 Notes]

So I was originally going to do

...

I might use aynchronous functions, and json files into project 14.

... 

[Project 14 Outline]

Step 1 integrate slider project - project 10
Step 2 integrate original connections - codepen
Step 3 integrate quiz project - project 12
    Create json file for responses
    Create asynchronous function for responses
        make the text appear on the screen the way it does on CHAT GPT
        - make it appear that someone is actually typing responses - 

[Project 14 Outline]

...

<!-- p14chestnutandhazelconnections -->
<!-- https://kennethlarotyamat.github.io/miscellaneous/javascript/index.js -->
<!-- kennethlarotyamat.github.io/javascript/p14chestnutandhazelconnections.js -->

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\p14chestnutandhazelconnections.js -->
<!-- <script src=" https://kennethlarotyamat.github.io/javascript/p14chestnutandhazelconnections.js "></script> -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\p14chestnutandhazelconnections.js -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->
<!-- check in 30 minutes [1250] -->
<!-- <script src=" https://kennethlarotyamat.github.io/miscellaneous/javascript/index.js "></script> -->
<!-- kennethlarotyamat.github.io/javascript/p14chestnutandhazelconnections.js -->
<!-- swap out javascrip sources -->

...

I'm trying to figure out why this project page doesn't display. I'm basically stuck here, 
i changed the name, it's possible that the name is too long.

...

<!-- it's done thank god that took forever, but this makes project 13 even more complete. -->
<!-- style="center" -->
<!-- https://stackoverflow.com/questions/8366957/how-to-center-an-iframe-horizontally -->
<!-- margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh; -->
<!-- display:block; -->
<!-- 
https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio
aspect-ratio
The aspect-ratio CSS property allows you to define the desired width-to-height ratio of an element's box. This means that even if the parent container or viewport size changes, the browser will adjust the element's dimensions to maintain the specified width-to-height ratio. The specified aspect ratio is used in the calculation of auto sizes and some other layout functions.
At least one of the box's sizes needs to be automatic in order for aspect-ratio to have any effect. If neither the width nor height is an automatic size, then the provided aspect ratio has no effect on the box's preferred sizes. -->
<!--   <iframe  src=".\options-pricing-calculator-project-13-part-2\src\index.html" 
style="margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh; width:100%; height: auto; aspect-ratio: 50/29; " 
scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
allowfullscreen ></iframe>  -->
<!-- <iframe  src=".\options-pricing-calculator-project-13-part-2\src\index.html" style="aspect-ratio: 5/3; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- https://kennethlarotyamat.github.io/miscellaneous/other/project13/Part2Calculator/options-pricing-calculator-project-13-part-2/src/index.html -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\other\project13\miscellaneous\other\project13\Part2Calculator\options-pricing-calculator-project-13-part-2\src\index.html -->
<!-- file:///C:/Users/KLYam/OneDrive/Documents/GitHub/miscellaneous/other/project13/Part2Calculator/options-pricing-calculator-project-13-part-2/src/index.html -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> -->
<!-- /*      
[Resources]              
https://www.linkedin.com/in/marianneshaffer/
https://codepen.io/marnee
https://codepen.io/shafferma08
https://github.com/shafferma08
*/ -->
<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] --> 
<!-- as far as I can tell, project 13 is done, I would have liked to work on a 3rd coding challenge, the one with hackerrank, but, knowing
how hard things are for me, it would probably take 6 hours, and I can use that time for something else, and the project says 2-3, and I did 2,
so, I'm done, the calculator is done, same thing, it's not what I wanted, but, it done according to the requirements. -->

...

<!-- kennethlarotyamat.github.io/CSS/p14chestnutandhazelconnections.css -->

<!-- https://kennethlarotyamat.github.io/miscellaneous/css/index.css -->

<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/CSS/p14chestnutandhazelconnections.css"> -->

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->

<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->

...

<!-- <iframe  src="https://github.com/kennethlarotyamat/miscellaneous" style="aspect-ratio: 8.68/6.86; height: auto; width:100%;" scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen ></iframe> -->
<!-- <link rel="stylesheet" href="..\miscellaneous\css\index.css"> -->
<!-- <link rel="stylesheet" href="https://kennethlarotyamat.github.io/miscellaneous/css/index.css"> [this works] -->
<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->
<!-- swap out css references --> <!-- check in 30 minutes [1250] -->
<!-- testing C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css --><!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\CSS\p14chestnutandhazelconnections.css -->
<!-- i need to wait for this page to deploy first, but until then, I am kind of stuck  -->

...

 <!-- .\media\Screenshot 2023-10-26 131509.png 
  
    /* 09 23 2023 09 40 00 Chestnut + Hazel's Miscellaneous Repository README.md

...

"Everything I had done has to be done 
over; I was on the wrong track entirely, 
and after working hard most of that time: 
I'm still only at the beginning." 

- Gustave Flaubert

...

This repository was created as a requirement for
completing project 13. I honestly did not want to
create a whole new repository, but, here we are.

...

William Carlos Williams

"The Young Housewife"  (1916)

At ten A.M. the young housewife
moves about in negligee behind
the wooden walls of her husband's house.
I pass solitary in my car.

Then again she comes to the curb
to call the ice-man, fish-man, and stands
shy, uncorseted, tucking in
stray ends of hair, and I compare her
to a fallen leaf.

The noiseless wheels of my car
rush with a crackling sound over
dried leaves as I bow and pass smiling.

...

WILLIAM CARLOS WILLIAMS

"The Red Wheelbarrow" (1938)

so much depends
upon

a red wheel
barrow

glazed with rain
water

beside the white
chickens

...

William Carlos Williams

"This Is Just To Say" (1962)

I have eaten
the plums
that were in
the icebox

and which
you were probably
saving
for breakfast

Forgive me
they were delicious
so sweet
and so cold

...

Kenneth Larot Yamat

"This Is Just To Say Something About The Young Housewife" (2023)

I totally ate all of the  so many    fried turkeys
that were hanging out
by the red wheelbarrow
you know     the one glazed with
soy sauce and beside the 
                      kentucky fried 
                             kung pao chickens
           which 
themselves were drenched in
              tabasco sauce

I request neither forgiveness
nor do I intend to apologize for
          my actions 

because 

I spent several hours
of quality time
with a certain young housewife

                    who

braless and dressed in negligee 

          and 

whose wild hair suggested
she spent even more additional
even higher quality time with
both the ice man
and the fish man

       either sequentially 
               or 
              simultaneously 
                     neither would surprise me

left me    breathless    exhausted
as well as      famished

I thought I gave a good
account of myself

but then along came 
          the milkman
and    she             still
   had enough energy 
       for 
    round four

I was there
I saw it all

...*/

  -->

...

<!-- ... [Start Solution Area]












function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    var lcArray = joinArray.toLowerCase();
 
    

if (lcArray === testString.toLowerCase()) {
return true;
} else {
return false;
}

}





  
  






... [End Solution Area]

I just completed the codewars version, and I'm coming back here to my leet code version, and it just. the solution I came up with seems 
so alien to me. there's so much stuff going on outside of the function. the two versions are different. obviously. but one. in one case. the 
leet code case, it's more for numbers, there's even a follow - up challenge where, they suggest trying to solve the same problem using 
some kind of mathematical formula. that's not something that can be done with words.

but the word version, the codewars you have to deal with upper and lower case letters, which is something that isn't a problem or 
something to be concerned about when working with numbers. in fact, when i realized. well, it wasn't the only problem, but one 
problem I was having was the to lower case part of the function. Anyway. I'm really glad that's over.

on to the haccker rank palindrome problem.




Good Lord. I can't believe it finally worked.

... [Start Working Area]






function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    var lcArray = joinArray.toLowerCase();
 
    

if (lcArray === testString.toLowerCase()) {
return true;
} else {
return false;
}

}











  
  






... [End Working Area]

function isPalindrome(x) {
 let reverse= x.split('').reverse().join('')
 if (reverse.toLowerCase()==x.toLowerCase()){
 return true;
 }
 else{
return false;
 }
 }


 this looks the most like something I would have done, or 
 the approach I would have taken, but it isn't clear to me 
 why this works, and mine didn't

...

function isPalindrome(x) {
 let reverse= x.split('').reverse().join('')
 if (reverse.toLowerCase()==x.toLowerCase()){
 return true;
 }
 else{
return false;
 }
 }


 this looks the most like something I would have done, or 
 the approach I would have taken, but it isn't clear to me 
 why this works, and mine didn't


function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    var lcArray = joinArray.toLowerCase();
 
    

if (lcArray === testString.toLowerCase()) {
return true;
} else {
return false;
}

}


i'm annoyed that I'm having trouble with something 
as basic as this. annoyed. really annoyed.

...

this one is close:

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
 
    var lcArray = joinArray.toLowerCase()
 
    

if (lcArray === testString) {
return true;
} else {
return false;
}

}

...

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    var lcArray = joinArray.toLowerCase()
    return lcArray; 
    

if (lcArray === testString) {
return true;
} else {
return false;
}

}

...

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    var lcArray = joinArray.toLowerCase()
    return lcArray; 
    

if (lcArray == testString) {
return true;
} else {
return false;
}

}

...

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

if (joinArray() == testString()) {
return true;
} else {
return false;
}

}

...

function isPalindrome(x) {


    var testString  = x ;
    var splitString = testString.split(""); 
    var reverseArray = splitString.reverse("");  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

if (joinArray() == testString()) {
return true
} else {
return false
}

}

...

function isPalindrome() {
    let x = 121
    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}
isPalindrome(""); 
console.log(isPalindrome(""));

...

function isPalindrome() {
    let x = 121
    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}
isPalindrome(""); 
console.log(isPalindrome(""));

...

from solutions:

function isPalindrome(x) {
return x.split('').reverse('').join('').toLowerCase() == x.toLowerCase()
}

from solutions:

function isPalindrome(x) {
 let reverse= x.split('').reverse().join('')
 if (reverse.toLowerCase()==x.toLowerCase()){
 return true;
 }
 else{
     return false;
 }
 }

[reflections start]

i'm looking for something that looks like something 
i would have done, because, even if these solutions work,
it's not clear to me how they work. or why they work.

[reflections end]

from solutions:

function isPalindrome(x) {
  x = x.toLowerCase(); 
 let res = '';
  for(let i = 0; i <  x.length; i++){
    res = x[i] + res;
  }
  if (res === x){
    return true;
  }else {
    return false;
  }
}

...

from solutions: 

function isPalindrome(x) {
  return x.toLowerCase().split('').reverse().join('') === x.toLowerCase();
}

...

from solutions: 

function isPalindrome(x) {
  x = x.toLowerCase()
  let a = 0
  let b = x.length
  while (a < b) {
    if (x[a] != x[b-1])
      return false
    a++
    b--
  }
  return true
}

...

from solutions: 

const isPalindrome = x => x.toLowerCase().split('').reverse().join('') == x.toLowerCase();

...

const isPalindrome = x => x.toLowerCase().split('').reverse().join('') == x.toLowerCase();

...

from solutions: 

const isPalindrome = (x) => {
  return x.split("").reverse().join("").toLowerCase() === x.toLowerCase() ? true : false
}

...

this doesn't even look like anything I'm even remotely familiar with.

...

https://www.freecodecamp.org/news/two-ways-to-check-for-palindromes-in-javascript-64fea8191fd7/

https://www.freecodecamp.org/news/two-ways-to-check-for-palindromes-in-javascript-64fea8191fd7/

...

function isPalindrome() {
    let x = 121
    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}
isPalindrome(""); 
console.log(isPalindrome(""));

...

    let x = 121
function isPalindrome() {

    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}
isPalindrome(""); 
console.log(isPalindrome(""));

...

function isPalindrome(x) {
    var x = "  ";
    var testString = x;
    var splitString = testString.split(" "); 
    var reverseArray = splitString.reverse();  
    var joinArray = reverseArray.join("");     
    return joinArray; 
    

    if (joinArray() === x) {
            return true
} else {
            return false
}

}

...

function isPalindrome(x) {
  
var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }

}



https://www.w3schools.com/js/js_if_else.asp

...

var x = "  ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  

...


so, the above function works, the issue now, is to figure out 
how codewars plugs in x, which is something I can't figure out.

...

var x = "hoolooh";
let myString6 = x;

function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(Boolean(reverseString6("") === myString6));

...

I'm really tired. and I'm really hungry.

https://www.youtube.com/watch?v=Q-hFjYyaHDI

https://www.youtube.com/watch?v=rc3o-XQg4Nw

...

Who said people may spend their whole lives climbing the ladder of success only to find once they reach the top that the ladder is leaning against the wrong wall?
Thomas Merton
People may spend their whole lives climbing the ladder of success only to find, once they reach the top, that the ladder is leaning against the wrong wall. Thomas Merton.Jun 3, 2019

...

now where am i?

... [works in console but does not work in codewars problem]

var x = "  ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  



...

... [works in console]

var x = "  ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  



...

var x = " canhohnac ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  

...

var x = " cancorblia ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  

...

... [This seems to work in the console]

var x = " ";
let testString = x;
function isPalindrome(x) {

    var splitString6 = testString.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 

}
isPalindrome(""); 
console.log(Boolean(isPalindrome("") === x));  

...

isPalindrome(""); 

console.log(isPalindrome);

...

VM1052:12 Uncaught ReferenceError: myString6 is not defined
    at <anonymous>:12:42

... [worked in leetcode for numbers example]


function isPalindrome(x) {
  
var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }

}

... 

[reflections start] 

still slogging along on this trivial problem. part 2 is a calculator problem, and I'm really just 
not there yet. my idea is to convert the 4 function calculator into an options pricing calculator,
and it feels like doing this is an eternity away.

[reflections end]

...



function isPalindrome(x) {
  // your code here
}
isPalindrome(""); 
console.log(isPalindrome);

...

function isPalindrome(x) {
  // your code here
}
isPalindrome(""); 
console.log(isPalindrome);

...

function isPalindrome(" ") {

    function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 

}
isPalindrome(" ")
console.log(isPalindrome);

...

function isPalindrome(x) {
  // your code here
}

...

function isPalindrome(" ") {
let myString6 = " ";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
}

...

function isPalindrome(" ") {

    function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 

}
isPalindrome(" ")
console.log(isPalindrome);

...

https://www.codecademy.com/forum_questions/505a43764502aa0002006ac3

...

function isPalindrome(" ") {

}

...

function isPalindrome(" ") {
let myString6 = " ";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
}

...


"Everything I had done has to be done over; I was on the wrong track entirely, 
and after working hard most of that time: I'm still only at the beginning." 

- Gustave Flaubert


[Works in Console]

var x = "hoolooh";
let myString6 = x;

function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(Boolean(reverseString6("") === myString6));

...

var x = "hoolooh";
let myString6 = x;

function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

let myString6 = x;
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

[works in console]

var x = "hoolooh";
let myString6 = x;

function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

let myString6 = x;
var x = "hoolooh"
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

let myString6 = "1215";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

...

function isPalindrome(x) {
let myString6 = "1215";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
}

...

function isPalindrome(" ") {
let myString6 = " ";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6(""); 
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));
}

...

function isPalindrome(x) {
  


}

...

function isPalindrome(x) {
  
var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }

}

...

I remember the leetcode version being for numbers, and this palindrome problem 
in codewars is more like the version I had in class, it deal with letters rather 
than numbers, a text string rather than a string of numbers.

... [Final Working Version] [works in leetcode problem]

/**
 * @param {number} x
 * @return {boolean}
 */
var isPalindrome = function(x) {

    var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }
    
};

...


I've been goofing off, but even goofing off is exhausting. I'm attending class, but 
I'm still working on Project 13. I'm actually just trying to figure out basic stuff.








I'm really tired. I've only gotten this far. the second problem out of the three.


https://geohack.toolforge.org/geohack.php?pagename=Eiffel_Tower&params=48_51_29.6_N_2_17_40.2_E_region:FR-75_type:landmark

https://geohack.toolforge.org/geohack.php?pagename=Eiffel_Tower&params=48_51_29.6_N_2_17_40.2_E_region:FR-75_type:landmark

https://en.wikipedia.org/wiki/Eiffel_Tower












... [Working version from codio assignment]











let myString6 = "1215";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6("");
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));














... [Working version from codio assignment]

...

"Everything I had done has to be done over; I was on the wrong track entirely, and after working hard most of that time: I'm still only at the beginning." - Gustave Flaubert

...

"Everything I had done has to be done over; I was on the wrong track entirely, and after working hard most of that time, I'm still only at the beginning."  - Gustave Flaubert, referenced in Paul Cooper's documentary on Carthage

...

Everything I had done has to be done over; I was on the wrong track entirely, and after working hard most of that time, I'm still only at the beginning.

- Gustave Flaubert, referenced in Paul Cooper's documentary on Carthage

...

I don't love pain for it's own sake and I don't pursue and desire pain just to feel it. - Adapted from Lorem Ipsum, by Cicero

...

https://www.youtube.com/watch?v=2mqX9twdyYo

gustave flaubert and after working hard on it most of that time, i'm still only at the beginning

...

let myString6 = "1215";
function reverseString6() 
{    
    var splitString6 = myString6.split(""); 
    var reverseArray6 = splitString6.reverse();  
    var joinArray6 = reverseArray6.join("");     
    return joinArray6; 
} 
reverseString6("");
console.log(myString6 + " is a palindrome:" + " " + Boolean(reverseString6("") === myString6));

... [Final Working Version]



var x = 121;

var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

function isPalindrome() 
{    
      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }
} 
isPalindrome("");

console.log(isPalindrome(""));



... [Final Working Version] [works in leetcode problem]

/**
 * @param {number} x
 * @return {boolean}
 */
var isPalindrome = function(x) {

    var digits = x.toString().split('').reverse();
var reverseDigits = digits.map(Number)
console.log(reverseDigits);

var joinreverseDigits = reverseDigits.join('');
console.log(joinreverseDigits);

      if (joinreverseDigits == x){
          return true
      } else {
          return false
      }
    
};

... -->

...

  <!-- StartUpNV, 300 S. 4th St #180, Las Vegas, NV 89101, United States, +1.775.393.9701

Unsubscribe Manage preferences

i really wanted to participate in startupnv, but, other things got in the way.-->

  <!--  -->

          <!-- id="q6i " name="q6n " value="q6v "  -->

        <!-- right when I think i'm done, something else breaks -->
        <!-- References: https://www.youtube.com/watch?v=U0CGsw6h60k      /     https://www.youtube.com/watch?v=Vhh-XF01Ats   -->
        <!-- // Question 6 this is taking forever. i don't know why i'm still working on this. -->
        <!-- It's almost done, and the hard part is already over. so I'm just going to finish it. I don't want a portfolio of half completed projects. -->

                <!-- // Question 7 -->

        <!-- id="q7i " name="q7n " value="q7v " -->



                <!-- // Question 8 -->

        <!-- id="q8i " name="q8n " value="q8v " -->

                    <!-- good lord. it worked. i really don't want to do anything else with this. this already took an eternity and i don't want to mess anything up. but 
            
            There is one more thing that I think needs to be fixed. -->

            <!-- I just check. it works. I am triumphant -->

                  <!-- </form> -->
      <!-- reactivate this closing tag if form relocation tags doesn't work -->

      <!-- return form tag here if relocation is unsucessful -->

          <!-- potential location to move form tags -->

          <!-- // $('.form-check-input8').attr('disabled',false).reset().on('mouseenter mouseleave') ;
  // $('.form-check-input7').attr('disabled',false).reset().on('mouseenter mouseleave') ;
  // $('.form-check-input6').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input5').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input4').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input3').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input2').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
  // $('.form-check-input1').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
 


//   References:         I used ChatGPT. What a nightmare. This is going to take a while. see screenshots. 
//                       kennethlarotyamat.github.io\media\Screenshot 2023-10-25 102138.png
//                       kennethlarotyamat.github.io\media\Screenshot 2023-10-25 102145.png
//                       kennethlarotyamat.github.io\media\Screenshot 2023-10-25 102151.png

  //   References:     https://stackoverflow.com/questions/3786694/how-to-reset-clear-form-through-javascript
  //                   https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event
  //                   https://kennethlarotyamat.github.io/other/project12/project12.html

  // https://api.jquery.com/category/selectors/form-selectors/

  // the correct word for boring. in spanish. is not: tedioso. it's aburrido

  // actually, it's not that bad: form-check-input8 just has to be. it's actually easy, even if i have to do eight of them.

  // form-check-input8


  // 
  // 

      // $('.form-check-input8').attr('disabled',false).reset().on('mouseenter mouseleave') ;
    // $('.form-check-input7').attr('disabled',false).reset().on('mouseenter mouseleave') ;
    // $('.form-check-input6').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input5').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input4').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input3').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input2').attr('disabled',false).reset().on('mouseenter mouseleave') ; 
    // $('.form-check-input1').attr('disabled',false).reset().on('mouseenter mouseleave') ; 

// $('.resetExamButton').on('click', function() {
// $('.form-check-input8').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
// });

// $('.resetExamButton').on('click', function() {
//   $('.form-check-input7').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//   });

//   $('.resetExamButton').on('click', function() {
//     $('.form-check-input6').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//     });

//     $('.resetExamButton').on('click', function() {
//       $('.form-check-input5').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//       });

//       $('.resetExamButton').on('click', function() {
//         $('.form-check-input4').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//         });

//         $('.resetExamButton').on('click', function() {
//           $('.form-check-input3').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//           });

//           $('.resetExamButton').on('click', function() {
//             $('.form-check-input2').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//             });

//             $('.resetExamButton').on('click', function() {
//               $('.form-check-input1').attr('disabled',false).reset().on('mouseenter mouseleave') ;   
//               });

              // what a nightmare. let's see if this works.



              // https://www.freecodecamp.org/news/javascript-refresh-page-how-to-reload-a-page-in-js/#:~:text=The%20simplest%20way%20to%20refresh,and%20loading%20the%20latest%20content.
              // this is probably the easiest thing to do, unless I can really figure this out.
              // but in this case. I would use the reset button to reload the page. same result. so. i think i'll just use it.
              // do the ends. justify the means?
              // well, in this case. yeah. i think so.

              //  https://www.geeksforgeeks.org/how-to-refresh-a-page-using-jquery/



              // $('.resetExamButton').on('click', function() {

              //   location.reload(true);
              
              
              // });

              // $('.resetExamButton').ready(function() {
              //   location.reload();
              // });

              // this one did not work. do not test it out to see what it does .


              // $('project12.html').ready(function() {
                // Attach a click event handler to the button element with the id "reloadButton"
                // $('#resetExamButton').click(function() {
                  // Reload the page when the button is clicked
                  // location.reload();
                // });
              // });




            //   $(document).ready(function () {
            //     $('#resetExamButton').click(function () {
            //         location.reload(true);
            //         alert('Resetting Exam');
            //     });
            // });

          //   $(document).ready(function () {
          //     $("button").click(function () {
          //         location.reload(true);
          //         alert('Reloading Page');
          //     });
          // });

          // https://www.geeksforgeeks.org/how-to-refresh-a-page-using-jquery/
 -->

 <!-- //  it works. thank god. this took forever. none of the resources i used helped. at all. -->

 <!--   // $('.feedbackquestion8').text("Don't be a philosopher. just take the exam and get on with your life. that'll be $495 by the way.");
  // good god it's starting to work. -->

  <!-- // Question 8 -->

  <!-- // Question 7 -->

  <!-- //  References: https://www.youtube.com/watch?v=FDRX3XxAOY4     https://genius.com/Clyde-carson-slow-down-lyrics [Hook]
// I tell 'em, slow down
// You know you can't catch me
// I move too fast on the gas, don't chase me
// Slow down, slow down

// what was my estimate for SPLG? -->

<!-- // Question 6 I'm almost done with this. thank god. 10252023 0620 -->

<!-- // Question 5 References: https://www.youtube.com/watch?v=U0CGsw6h60k  /   https://www.youtube.com/watch?v=Vhh-XF01Ats -->

<!-- // Question 4 -->

<!-- //  Question 3 DONE -->

<!-- //  Question 2 10252023 0605 what a nightmare. i had a special hover effect specifically in place for the green book response where the hover effect is green, rather than blue, it broke everything and then i had to fix it. it took pretty much over a million years. -->
<!-- // Question 1 -->

...

So I figured out what the issue is: The issue has to do with deployments to GitHub being delayed, but it isn't clear to me what 
is causing pages to be delayed, or what's causing the deployments to be delayed.

...

<!-- <!-- Start Estimage Template -->
<!-- <p>

    <br>        Estimage for:   SPLG, 10/25/2023        <br>
    <br>        Range AMT:      .70
    <br>        Midpoint:       49.85 
    <br>        Range L/H:      49.50 - 50.20
    <br>        O/C:            49.90 - 49.70
    
</p> -->
<!-- End Estimage Template -->

<!-- Start Image Template -->
<!-- End Image Template --> -->

...

<!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!-- // C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js
//  p14chestnutandhazelconnections -->

<!-- /* <iframe  src=".\options-pricing-calculator-project-13-part-2\src\index.html" 
style="margin: 1vh 1vh 1vh 1vh; padding: 1vh 1vh 1vh 1vh; width:100%; height: auto; aspect-ratio: 50/29; " 
scrolling="yes"   
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
allowfullscreen ></iframe>  */
 /* p14chestnutandhazelconnections */ -->

 ...

<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> -->

...

<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\javascript\project14.js -->
<!--[Remote Reference] <script src="https://kennethlarotyamat.github.io/javascript/project14.js"></script> -->

<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> -->

...

<!--[Local Reference] C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\css\project14.css -->
<!--[Remote Reference] <link rel="stylesheet" href="https://kennethlarotyamat.github.io/css/project14.css"> -->

...

/* 10252023 0605 what a nightmare. i had a special hover effect specifically in place for the green book response where 
the hover effect is green, rather than blue, it broke everything and then i had to fix it. it took pretty much over a million years. */

...