1. Project: Add to personal website
Overview

For Project 12, 

you will get some practice creating a simple project from scratch that 
incorporates HTML, CSS, and JavaScript. 


Specifically, since jQuery was introduced this 
week, youâ€™ll write your JavaScript logic in jQuery! When completed, youâ€™ll add this project 
to GitHub and to your personal websiteâ€™s project section!


Step One
Create a simple quiz app, which presents the user with at least 1 multiple choice question 
and gives some kind of feedback to the user about whether their selected answer was correct 
or incorrect.


Requirements:

HTML Structure - The quiz should have a title, should provide 3 - 4 answer options, and 
should have an element to display feedback on the selected answer

CSS Styling - The quiz should be centered on the page, applying suitable margin and padding 
for better readability and appearance. In addition, the answer options should employ some 
kind of hover effect (e.g. - changing color, etc.), and the feedback message should use 
distinct colors (one for a correct answer, another for an incorrect answer)

Functionality - When an answer option is clicked, the other options should be disabled 
(unclickable), a determination should be made as to whether the answer is correct or not, 
and feedback should be output to the appropriate element. All the JS should be written in jQuery!

Example:
Nerd Quiz
Initial State
Nerd Quiz - correct answer
Correct Answer
Nerd Quiz - incorrect answer
Incorrect Answer

NOTE: This project does not need to be terribly complex or have amazing styling (unless you want to, of course). 
Some basic styling will be sufficient. Bottom line: donâ€™t overthink it, keep it simple, and prioritize 
functionality over aesthetics!

Step Two
Add all of your code to a GitHub repository, and add the quiz app to your websiteâ€™s project section. 
Include a screenshot, title, brief description, and a link to the repo.
When youâ€™re finished with both steps, submit the HTML, CSS, and jQuery for your quiz app below.
Happy coding! ðŸš€

            <!-- C:\Users\KLYam\OneDrive\Documents\GitHub\kennethlarotyamat.github.io\other\project10\sl9.html -->
            <!-- https://kennethlarotyamat.github.io/other/project10/sl9.html --> 
            <!-- Project 12 Requires that I add the resulting project 12 to project 10 -->
            <!-- still in 404 status as of 10232023 0536  / I had a 404 issue with chestnutandhazel.com, that, I think that I might have fixed. 
            
            it was called a soft 404 error -->

            <!-- In addition to adding project 12 to my project slideshow (Project 10), i'm updating my SRC references, converting them from 
            relative paths to absolute paths. I think this may result in them taking longer to load, but, I have no idea. -->
            <!-- alrighty, so as of 10232023 0547 the slide is working  I'm moving these comments to my project 12 text file-->






1. Project: Add to personal website
Overview
For Project 12, you will get some practice creating a simple project from scratch that incorporates HTML, CSS, and JavaScript. Specifically, since jQuery was introduced this week, youâ€™ll write your JavaScript logic in jQuery! When completed, youâ€™ll add this project to GitHub and to your personal websiteâ€™s project section!
Step One
Create a simple quiz app, which presents the user with at least 1 multiple choice question and gives some kind of feedback to the user about whether their selected answer was correct or incorrect.
Requirements:
HTML Structure - The quiz should have a title, should provide 3 - 4 answer options, and should have an element to display feedback on the selected answer
CSS Styling - The quiz should be centered on the page, applying suitable margin and padding for better readability and appearance. In addition, the answer options should employ some kind of hover effect (e.g. - changing color, etc.), and the feedback message should use distinct colors (one for a correct answer, another for an incorrect answer)
Functionality - When an answer option is clicked, the other options should be disabled (unclickable), a determination should be made as to whether the answer is correct or not, and feedback should be output to the appropriate element. All the JS should be written in jQuery!
Example:
